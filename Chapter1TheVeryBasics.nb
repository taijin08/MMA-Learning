(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    211904,       4257]
NotebookOptionsPosition[    207401,       4171]
NotebookOutlinePosition[    207860,       4189]
CellTagsIndexPosition[    207817,       4186]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter I The Very Basics", "Section",
 CellChangeTimes->{{3.918442962727828*^9, 3.9184429638524528`*^9}, {
  3.9184431588532314`*^9, 3.918443172456232*^9}, {3.9184435398892255`*^9, 
  3.9184436190340137`*^9}, {3.9185119622980776`*^9, 
  3.9185119719421115`*^9}},ExpressionUUID->"845c7123-19c7-4a03-932c-\
7aa053d2af8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Horizontal", " ", "cursor", " ", "means", " ", "is", " ", "ready", " ", 
    "to", " ", "give", " ", "command"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"10", "!"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "evaluate", " ", "the", " ", "command", " ", "by", " ", "Shift"}], "+", 
     "Enter"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.918442962727828*^9, 3.9184429638524528`*^9}, {
   3.9184431588532314`*^9, 3.918443172456232*^9}, {3.9184435398892255`*^9, 
   3.9184436190340137`*^9}, 
   3.9185119622980776`*^9},ExpressionUUID->"13d5bc39-3c1e-48c0-8f53-\
fab5d1e552f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"717", "/", "3"}]], "Input",
 CellChangeTimes->{{3.9184436502700677`*^9, 3.9184436512347827`*^9}, {
  3.918443767280952*^9, 
  3.9184437684023447`*^9}},ExpressionUUID->"a7538de2-8082-4cea-a734-\
97125bfd97d6"],

Cell[BoxData["239"], "Output",
 CellChangeTimes->{3.918443651750179*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5e266efd-1fde-4996-8503-b33c78f02d40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"718", "/", "3"}]], "Input",
 CellChangeTimes->{{3.9184436571723685`*^9, 3.918443658201712*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"482edf62-93c8-4658-8c21-9780841ef7d4"],

Cell[BoxData[
 FractionBox["718", "3"]], "Output",
 CellChangeTimes->{3.9184436584557123`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"3b97d3ff-8440-44ee-ba36-98d6519c37df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"718", "/", "3"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Approximate", " ", "answer"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"718", "/", "3"}], ",", "5"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"round", " ", "to", " ", "5", " ", "digits"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.918443662118191*^9, 
  3.918443731602996*^9}},ExpressionUUID->"afe748a7-fdea-4e0e-a7ab-\
5106bf855648"],

Cell[BoxData["239.33333333333334`"], "Output",
 CellChangeTimes->{3.918443717078408*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"74258378-bd78-41d1-8b13-7da297adec70"],

Cell[BoxData["239.3333333333333333333`5."], "Output",
 CellChangeTimes->{3.9184437170814085`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"aeb7d8a2-26d2-483f-8302-e7fee1767520"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  NamespaceBox["WolframAlphaQueryResults",
   DynamicModuleBox[{Typeset`q$$ = "718/3", Typeset`opts$$ = {
    AppearanceElements -> {
      "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
     Asynchronous -> All, 
     Method -> {
      "ExtrusionChosen" -> {
        "Fast parse", "Fast parse", 1, 0, "Input", "718/3"}, "ExtrusionOpen" -> 
       False, "Formats" -> {
        "cell", "minput", "moutput", "msound", "dataformats"}}}, 
    Typeset`elements$$ = {
    "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Typeset`pod1$$ = XMLElement[
    "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
      "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"718/3"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TagBox[
              FractionBox["718", "3"], 
              PolynomialForm[#, TraditionalOrder -> False]& ], 
             TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
    Typeset`pod2$$ = XMLElement[
    "pod", {"title" -> "Exact result", "scanner" -> "Rational", "id" -> 
      "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
      "primary" -> "true"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TemplateBox[{
               FractionBox["718", "3"], 
               TemplateBox[{10}, "Spacer1"], 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"irreducible\"", "\[NoBreak]", 
                  "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
           "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
    Typeset`pod3$$ = XMLElement[
    "pod", {"title" -> "Decimal approximation", "scanner" -> "Numeric", "id" -> 
      "DecimalApproximation", "position" -> "300", "error" -> "false", 
      "numsubpods" -> "1", "primary" -> "true"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"N[718/3, 79]"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TagBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                   "\"239.3333333333333333333333333333333333333333333333333333\
3333333333\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
             TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
      XMLElement["states", {"count" -> "1"}, {
        XMLElement[
        "state", {
         "name" -> "More digits", "input" -> 
          "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod4$$ = 
    XMLElement[
    "pod", {"title" -> "Repeating decimal", "scanner" -> "Numeric", "id" -> 
      "RepeatingDecimal", "position" -> "400", "error" -> "false", 
      "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"RealDigits[718/3]"}], 
        XMLElement["moutput", {}, {"{{2, 3, 9, {3}}, 3}"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             StyleBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  GridBox[{{
                    TemplateBox[{"\"239.\"", 
                    OverscriptBox["\"3\"", "_"]}, "RowDefault"]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {"Columns" -> {{
                    DirectedInfinity[1]}}, "Rows" -> {{
                    DirectedInfinity[1]}}}], "Column"], "\"  \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"period \"", "1"}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
               LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}],
              TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
      XMLElement["states", {"count" -> "1"}, {
        XMLElement[
        "state", {
         "name" -> "Step-by-step solution", "input" -> 
          "RepeatingDecimal__Step-by-step solution", "stepbystep" -> "true", 
          "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod5$$ = 
    XMLElement[
    "pod", {"title" -> "Mixed fraction", "scanner" -> "Rational", "id" -> 
      "MixedFraction", "position" -> "500", "error" -> "false", "numsubpods" -> 
      "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement[
        "minput", {}, {"{IntegerPart[718/3], FractionalPart[718/3]}"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             StyleBox[
              TagBox[
               RowBox[{"239", "\[InvisibleSpace]", 
                 FractionBox["1", "3"]}], 
               $CellContext`TagBoxWrapper["StringBoxes" -> RowBox[{"239", " ", 
                   FractionBox["1", "3"]}]]], DigitBlockMinimum -> {
                DirectedInfinity[1], 
                DirectedInfinity[1]}, StripOnInput -> False], 
             TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
      XMLElement["states", {"count" -> "1"}, {
        XMLElement[
        "state", {
         "name" -> "Step-by-step solution", "input" -> 
          "MixedFraction__Step-by-step solution", "stepbystep" -> "true", 
          "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod6$$ = 
    XMLElement[
    "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
      "NumberLine", "position" -> "600", "error" -> "false", "numsubpods" -> 
      "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"NumberLinePlot[718/3]"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TemplateBox[{
               GraphicsBox[{
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]], 
                    PointBox[{239.33333333333334`, 4.308}]}, 
                   "239.33333333333334`"], 
                  Annotation[#, 239.33333333333334`, "Tooltip"]& ]}, 
                ImageSize -> 330., Axes -> {True, False}, AxesStyle -> {}, 
                PlotRange -> {{167.53333333333333`, 311.1333333333333}, 
                  Automatic}, AxesOrigin -> {0, 0}, 
                Method -> {"AxesInFront" -> False}, TicksStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1]], "\"\""}, "Labeled", 
              DisplayFunction -> (FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ), 
              InterpretationFunction -> (RowBox[{
                 StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                 "[", 
                 RowBox[{#, ",", #2, ",", 
                   StyleBox[
                   "Bottom", FontFamily -> "Roboto", FontSize -> 13]}], 
                 "]"}]& )], TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
    Typeset`pod7$$ = XMLElement[
    "pod", {"title" -> "Quotient and remainder", "scanner" -> "Rational", 
      "id" -> "QuotientAndRemainder", "position" -> "700", "error" -> "false",
       "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"QuotientRemainder[718, 3]"}], 
        XMLElement["moutput", {}, {"{239, 1}"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             RowBox[{"718", "\[LongEqual]", 
               RowBox[{
                 TemplateBox[{
                   FrameBox[
                   "239", FrameStyle -> GrayLevel[0.8], FrameMargins -> 1, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    StripOnInput -> False], 
                   StyleBox["\" \[Times] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "3"}, "RowDefault"], "+", 
                 FrameBox[
                 "1", FrameStyle -> GrayLevel[0.8], FrameMargins -> 1, 
                  BaselinePosition -> Baseline, ContentPadding -> False, 
                  StripOnInput -> False]}]}], TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]\
}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
      XMLElement["states", {"count" -> "2"}, {
        XMLElement[
        "state", {
         "name" -> "Show details", "input" -> 
          "QuotientAndRemainder__Show details"}, {}], 
        XMLElement[
        "state", {
         "name" -> "Step-by-step solution", "input" -> 
          "QuotientAndRemainder__Step-by-step solution", "stepbystep" -> 
          "true", "buttonstyle" -> "StepByStepSolution"}, {}]}]}], 
    Typeset`pod8$$ = XMLElement[
    "pod", {"title" -> "Pie chart", "scanner" -> "Rational", "id" -> 
      "PieChart", "position" -> "800", "error" -> "false", "numsubpods" -> 
      "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement[
        "minput", {}, {"ResourceFunction[\"FractionPieChart\"][718/3]"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TagBox[
              TemplateBox[{
                GraphicsBox[{{}, {}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                    RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]}, {
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}}}}}, \
{}}, {{}}}}, {{{{{{}, {}}, {{}, {}}, {{}, {}}}, {}}}, {}}, {}, {}}, {{{}, \
{}}}, {{{{}, {}, {}, {}}}, {}}}, {
                 DisplayFunction -> Identity, BaseStyle -> Automatic, Epilog -> 
                  InsetBox[
                    BoxData[
                    FormBox[
                    TemplateBox[{
                    StyleBox["239", {
                    RGBColor[0, 0, 0], 
                    Directive[FontSize -> 12.3]}, StripOnInput -> False], 
                    StyleBox["\"\[Times]\"", {
                    RGBColor[0, 0, 0], 
                    Directive[FontSize -> 12.3]}, StripOnInput -> False]}, 
                    "RowDefault"], TraditionalForm]], {0, 0}], GridLinesStyle -> 
                  Automatic, ImageSize -> 50, 
                  PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
                  Scaled[0.05], TicksStyle -> {}}, TicksStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1]], 
                GraphicsBox[{{}, {}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                    RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    Opacity[0.66], 
                    GrayLevel[0.8196], 
                    AbsoluteThickness[1.5]]]], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}}}}}, \
{}}, {{}}}}, {{{{{{}, {}}, {{}, {}}, {{}, {}}}, {}}}, {}}, {}, {}}, {{{}, \
{}}}, {{{{}, {}, {}, {}}}, {}}}, {
                 DisplayFunction -> Identity, BaseStyle -> Automatic, 
                  GridLinesStyle -> Automatic, ImageSize -> 50, 
                  PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
                  Scaled[0.05], TicksStyle -> {}}, TicksStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1]]}, "RowDefault"], 
              $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
             TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement["dataformats", {}, {"minput"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
    Typeset`pod9$$ = XMLElement[
    "pod", {"title" -> "Prime factorization", "scanner" -> "Integer", "id" -> 
      "PrimeFactorization", "position" -> "900", "error" -> "false", 
      "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"FactorInteger[718/3]"}], 
        XMLElement["moutput", {}, {"{{2, 1}, {3, -1}, {359, 1}}"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             StyleBox[
              RowBox[{"2", 
                StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], 
                SuperscriptBox["3", 
                 TagBox[
                  RowBox[{"-", "1"}], HoldForm]], 
                StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], "359"}], 
              DigitBlockMinimum -> {
                DirectedInfinity[1], 
                DirectedInfinity[1]}], TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}\
], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
    Typeset`pod10$$ = XMLElement[
    "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction",
       "id" -> "ContinuedFraction", "position" -> "1000", "error" -> "false", 
      "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["minput", {}, {"ContinuedFraction[718/3]"}], 
        XMLElement["moutput", {}, {"{239, 3}"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TagBox[
              GridBox[{{
                 
                 TemplateBox[{"\"[\"", "\"239; 3\"", "\"]\""}, 
                  "RowDefault"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", GridBoxItemSize -> {"Columns" -> {{
                    Scaled[1.003]}}}], "Column"], TraditionalForm]], 
           "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
      XMLElement["states", {"count" -> "1"}, {
        XMLElement[
        "state", {
         "name" -> "Fraction form", "input" -> 
          "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod11$$ = 
    XMLElement[
    "pod", {"title" -> "Egyptian fraction expansion", "scanner" -> "Rational",
       "id" -> "EgyptianFractionExpansion", "position" -> "1100", "error" -> 
      "false", "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["moutput", {}, {"239 + 1/3"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TemplateBox[{"239", "\" + \"", 
               TagBox[
                FractionBox["1", "3"], HoldForm]}, "RowDefault"], 
             TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,moutput,computabledata,formatteddata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
    Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
    True, False, {False}, True}, Typeset`aux3$$ = {
    True, False, {False}, True}, Typeset`aux4$$ = {
    True, False, {False}, True}, Typeset`aux5$$ = {
    True, False, {False}, True}, Typeset`aux6$$ = {
    True, False, {False}, True}, Typeset`aux7$$ = {
    True, False, {False}, True}, Typeset`aux8$$ = {
    True, False, {False}, True}, Typeset`aux9$$ = {
    True, False, {False}, True}, Typeset`aux10$$ = {
    True, False, {False}, True}, Typeset`aux11$$ = {
    True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
    Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
    FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "11", "datatypes" -> "Math", "timedout" -> "", 
     "timedoutpods" -> "", "timing" -> "0.852", "parsetiming" -> "0.068", 
     "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
     "MSP496812fg7eeeai3405g8000025ddi9agd9e5fd58", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa496912fg7eeeai3405g8000048edd3b1357i85427794153569472399936", "version" -> 
     "2.6", "inputstring" -> "718/3"}, Typeset`sessioninfo$$ = {
    "TimeZone" -> 8., 
     "Date" -> {2024, 3, 3, 16, 36, 48.9298129`9.442148413327047}, "Line" -> 
     11, "SessionID" -> 19418385159434943411}, Typeset`showpods$$ = {1, 2, 3, 
    4, 5, 6, 7, 8, 9, 10, 11}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
    "Fast parse", "Fast parse", 1, 0, "Input", "718/3"}, Typeset`open$$ = 
    False, Typeset`newq$$ = "718/3"}, 
    DynamicBox[ToBoxes[
      AlphaIntegration`FormatAlphaResults[
       Dynamic[{
        1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$}, Typeset`chosen$$,
          Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
         Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
         Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
      StandardForm],
     ImageSizeCache->{61.09765625, {34., 18.}},
     TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
    DynamicModuleValues:>{},
    Initialization:>If[
      And[
       Not[Typeset`initdone$$ === True], 
       Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
      Null; WolframAlphaClient`Private`doAsyncUpdates[
        Hold[{
         Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$}], 
        Typeset`asyncpods$$, 
        Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
      Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
    SynchronousInitialization->False],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "begin", " ", "with", " ", "\"\<=\>\"", " ", "to", " ", "calculate", " ",
       "free"}], "-", 
     RowBox[{"form", " ", "input"}]}], ",", " ", 
    RowBox[{"and", " ", "get", " ", "related", " ", "clculations"}]}], 
   "*)"}]}]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.9184438262860765`*^9, 
  3.918443870778598*^9}},ExpressionUUID->"dd7542ed-df34-4c57-a316-\
dea2375c2181"],

Cell[BoxData[
 FractionBox["718", "3"]], "Output",
 CellChangeTimes->{3.9184438045173836`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"ec56a593-7507-4601-af7c-ebf713366150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Assign", " ", "variables"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"3", "a"}], "+", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Clear", " ", "variable", " ", "and", " ", "make", " ", "a", " ", 
    "undefined"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "+", "5"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"a", "+", "9"}], ")"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "-", "7"}], "==", "0"}], ",", "x"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "\"\<==\>\"", " ", "is", " ", "for", " ", "bool", " ", "calculation", " ", 
    "while", " ", "\"\<=\>\"", " ", "is", " ", "for", " ", "assignment"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.918446139741765*^9, 
  3.918446291432684*^9}},ExpressionUUID->"e212a180-b2c5-432d-a93f-\
9b07a35b4e7d"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.918446156010935*^9, {3.9184461985000963`*^9, 3.9184462155287333`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"2c298994-8927-40cd-bec5-e2c6d95f4605"],

Cell[BoxData[
 RowBox[{"45", "+", 
  RowBox[{"14", " ", "a"}], "+", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellChangeTimes->{
  3.918446156010935*^9, {3.9184461985000963`*^9, 3.9184462155317435`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"8746aa17-817b-4cf5-8a4a-99d26b3550c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["7", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.918446156010935*^9, {3.9184461985000963`*^9, 3.9184462155337334`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"3440f135-59a5-48f1-bb3e-2f429febcaba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "solve 2x-7=0", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "Solve[2*x - 7 == 0, x]"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"Result__Decimal form"}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Solve[2 x - 7 == 0, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"solve\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "-", "7"}], "\[LongEqual]", 
                    "0"}], HoldForm]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Solve", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[-7 + 2 x == 0, x]"}], 
       XMLElement["moutput", {}, {"x == 3.5"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"x", "\[LongEqual]", "3.5`"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact form", "input" -> "Result__Exact form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Root plot", "scanner" -> "Solve", "id" -> "RootPlot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[{-7 + 2 x, 0}, {x, -5.25, 5.25}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.5]], 
                  LineBox[CompressedData["
1:eJwtlGs01HkcxgcN0/wrw/wKp7LlOm4xJ1Et5mu7bEW6a1SMayUVYZVJu44u
S7Sl5FYc7YbOUezsiIj+363JKrPYRjW7zqJcZ7eJGLfQrD2nF8/5nM85z6vn
xbM8NHpnhC6Dwdg6m/+ZkFf4Qasl+NC3ZUL7HR8lN/b+Kp0mqPy9rCvgWz6+
K+BkHpokOOaX2ihN4mPIjykuLcMEXXZ45x5K5KNv2cHowl6CJXuk7i2xfLSo
X6H2aCKYGZSTUBjBx+auRwOJ2QQPxYg0Hj58tOF1do44EuRmDQ4mLuJj2ZMc
b9tNXHz1pqmIe9sFuf6R1udijZFdVmn81RoXrOhrbDe6ZfSZzvjFuSJmZz3n
M1dgr4tFWJnCEGNNMyUvVU64Km7klglrAebXTLZSc5xQLek637t+Ho4Jhx7H
WjhiVIf2mH4RG90GtW562x3wqpWhZ8lrFm6++r25Isoek4XbOXlOBgiOvFR5
th2+TL2Xqk5n4hGZv2zsKQ8VLz72Y4MeHomciQvutsVcttin/wtd9GXWF48Y
2qL+AdX1jD0M1CvXbGmwt8HqXSq2re0M/X537eNnm61x8HnY8F+dk3TdcG7d
2EkrTPzmUWnGjjE6qGDQLizLEq9MJUX0aIfpHi+R2SRtgcOR7m/jmt/TXuqN
Sc1/LseQ5p5LxY/6aXlenaRtfBmqVAFbLHlvaE9Pn8g51svQUWm+YY1BG63f
/hOvP9kcB+wjDnCe1NJ77bpTTF8twdEz/AeXL9YIOPFeKWUrF+NRD8lDcrVN
EKtMO1x/zAyz9nRLE/q7BDfsDXZZNJjg1hKn4/3cAcGx7Hgr/amFGMlkZf1h
Pigo+TST77OaYJX/pTZ35bCgeHfNwp5rxhh+0s1o7uExgZ8s/ORUEwfP153e
4PpwUnB63bnapvULUMlKc745My3gjSe0hulSqOa0W59dxwCbjs2Vk6cMsLSC
du5V6cAvRclFqxzn4APXyp2NUj24kp2zLzp3dld5wgmhiAmaFqu1hSkf6b6D
S/+9oGsAh8Mv7uoZHaGXDSjOuD1jAYMONvKtUtFZp4Xzrp1gA248tbalT0mL
Rt9JYzznQXKFeCzgQbngcWxE1TvGAuBkO0gjDLoEIt27lQtLDGHCOLj4nota
YOeh0yeq5sCmN3NdtLWjAki+Fp2eYQQM3ZtJ+8OnBZYNOTYXAo0hw1SUb5qg
A3yt5RFv4IJs+vIdpg4TDnjnOCi4BGKYgeW+21hQF1TRcdaEwJC4XmwYxIKl
Sb9lui4mED+09OsXR1nQUTU+ft2CwKn2js69F1kgchTKhHwCSZJgo7CnLAg1
MQvs8COQGhgen/jlXIhU5/+gSiNw+37U2hJbNjxnS73zLxHgOcj1I93YYM9r
0mzJJHCnyFHhsIEN/4RO7bubO+vp6ihJKBuOKvfbRpcS+DkkuqCugA0xT5ag
RkYA58cxFFwKWrtc44obCcBZhfy6BQX8T742/nICsomVeUI+BcOrz2RUKwg0
dmv4HX4UxJX/LRS/JSCvSQhTpVHQ1jRKOfQR2O782vluLgWuqvl0u4pA6233
6eOlFGgsvaw9P8z65YksjYyC3d7+SrVmts8MCKlWUHA/6Hh64QSBNnGNk/gt
BYuSLnhtmyYgHDL76PGBgs//BcoIcYNWS8F/2NBWIA==
                   "]]}, Annotation[#, "Charting`Private`Tag$3253826#1"]& ], 
                
                TagBox[{}, 
                 Annotation[#, "Charting`Private`Tag$3253826#2"]& ]}}, {}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{-15., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-10., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-20., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-19., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-18., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-17., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-16., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-14., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-13., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-12., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-11., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-9., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-8., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-7., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, DisplayFunction :> Identity, 
              Epilog -> {
                AbsolutePointSize[5], 
                Hue[0], {
                 TagBox[
                  TooltipBox[
                   PointBox[{3.5, 0}], 
                   
                   TemplateBox[{"\"(\"", "3.5`", "\",\"", "0", "\")\""}, 
                    "RowDefault"]], Annotation[#, 
                   Row[{"(", 3.5, ",", 0, ")"}], "Tooltip"]& ]}}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], FrameTicks -> {{Automatic, Automatic}, {
                Automatic, Automatic}}, GridLines -> {None, None}, 
              GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.85]}, ImageSize -> 330., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> PointSize[Medium], "PointSizeFunction" -> 
                "SmallPointSize", "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{-5.25, 5.25}, {-17.49999957142857, 
               3.499999571428571}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}, TicksStyle -> 
             Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "Solve", "id" -> 
     "NumberLine", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[x == 7/2, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]], 
                   PointBox[{3.5, 0.06300000000000003}]}, "3.5`"], 
                 Annotation[#, 3.5, "Tooltip"]& ]}, ImageSize -> 330., 
               Axes -> {True, False}, AxesStyle -> {}, 
               PlotRange -> {{2.4499999999999997`, 4.550000000000001}, 
                 Automatic}, AxesOrigin -> {0, 0}, 
               Method -> {"AxesInFront" -> False}, TicksStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1]], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", FontSize -> 13]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "Solve", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.5630000000000001", "parsetiming" -> 
    "0.266", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP60921ce6759h3bc1bd790000662h00fh9753ga0c", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "7", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa60931ce6759h3bc1bd7900000gi938gh7gb9ah726249686130609588165", "version" -> 
    "2.6", "inputstring" -> "solve 2x-7=0"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2024, 3, 3, 17, 19, 4.2063151`8.376476781328016}, "Line" -> 27,
     "SessionID" -> 19418385159434943411}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "Solve[2*x - 7 == 0, x]"}, 
   Typeset`open$$ = True, Typeset`newq$$ = "solve 2x-7=0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {691., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"496faaf7-9aa5-4e66-8deb-d7c302e30cd6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["7", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.918446326859041*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"444af797-b9cf-4a8d-8008-b52ea538ae8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "-", "7"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "x"}], "-", 
       RowBox[{"2", "y"}]}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9184463638241243`*^9, 3.9184463783832965`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d23b4dc3-71aa-44f1-8c7f-d8aecf9e139e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["7", "2"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["21", "4"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9184463818553576`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"5bd66edb-162b-4225-8986-bf025c8bf573"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}], "==", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.918446388237874*^9, 3.9184464001018505`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9da54d9e-bcaa-44ef-b4b0-c2a7ffeb62a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9184464005782566`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"24711272-6d56-4731-9520-86e87ea58b4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "-", "7"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9184464056302257`*^9, 3.918446414078252*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"858f6e1d-b0eb-4bf0-a7e5-85ab1ba22023"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H801Xccx3HEcrH8uG7cG+7lI+73tkuhK1+2+05Mp1w1oh3ard1Yjt+r
jhT9MErUKhUW7obupHNTTmdJndZ9L4qoO0uYtFUUYZXrR90su2tn3z9e5/Hv
66+nqyI9MsHEyMhI9n7/uXtYNmEwEPxfGoey50/3vyOMNEbYPHpz+S1hpFEQ
kDGbPkkYabxRdNz88RBhpNHcq9cF7xJGGk9u37R6XwVhpFFtvE1l5E8YaTRL
CPPhfuHGGIDs32+m1BS7Mi7DyObyzVS7gNEfs199nHJskI/X37hI2nQSbNpR
nnRhjQs+DJRd6vWUYMTxaME/p5zQ87bIxhC+FMOUP0es/IuHKq3c0z3TD2tb
d/Zsi+Ni12DQ2JV6X5Tnn+T8WueA3sHtRVvu++CeTXPOW7Lno7TBuHc/yweN
xHzNiv32uK/06KPq4CX44NCpAnW3Hb64eae5O2kxOlkknp0KtmX0xuSlIrN+
J2ts5JV8k3pEjJv9/6xrbrbEiwvS7z95sghFWbQhTWWOnCDlXv9IEVb/EdWy
c7kZdr6kBq5VCXE4lxMU5miCU2jxPbHyxKslwtDnMbOatIWrbK9GL8TFI31T
3srXmvBdktnVZwiGXO1nzcaMa4pfZgZrOG6YcfaC3pY9qPGa5kgVCgHGfEWq
7+Xc1iRI7ER3y5yx9U5fkW9Um9Rvc2TrnV08pMW/XFxbNii9+NOarkU8BzTJ
5DyM545LDSHTxbJJNs61WpurePla+u7teo32oA3mPe5ZsfX0rHQ3n7r27QYL
bKg4sHbPhDFUtU3I5ywwxfSaeJunMWYQkpl6PV01o5EnlTsX5JqDTf1H7NbJ
MU3hZ5kBvpWWgMrkmiWTTRpT+5KhvTPzQFBV52foGpb2duwfz7e2hSa5V75n
jl4ana2QlDfbwboXhX2J8+ZAiuWYmzbWHhrE5w4tS2YBX32r9INRDuSc48Xx
6qwhu2lFlHWFA7zOKKh1kbAhozalUeLNhcfhfSmp8vlgZeKv8HrGA0fTtJYN
7VwITV1XIjrhBEUP6kTRHs7geMU5PdTdhVEAx7ceLF7cy2d0hcgDa8TKRgGo
rH6IpVMJiOLyo1W7XWFdo7l65d/u0DPEqjkR7Qbn7rJDPNUeoFU8W27HJ1B5
sz3P/RMhPDE9oy9xI3CDFaFbFCqEqdrEC1wPAs9lv8l9w4XAHRtzchUT8Onp
DQiOFUL8tok33oEE2oaevtqYKYSZPEO9bD2BqbmGuIrzQvD4kcsrPEogfJWv
nx2fgoCw/k6rEwS2Hmms5npQED5SWXCslMB39wKsXcUUfC0WTJcpCQzEwqh3
IAXXLnl01qoJZCXLqmTrKYi85XugpZWA6vAWq8KjFCQkTget7CDQ3jm681gp
BVkWlyc7tATG7dOGy5QUKCPoL7u6CdDK7Tdq1RQ874GggUECnfW5WS2tFMxk
mUwmDL//qzMd6tBS8OGClrMjowR4koNRXd0U+GwMc9DpCMRfP+I1MEhBqDFL
u32aQJGJXeXIKAWfn27P1+sJNHxawtLpKEgKPRyY847A/SLHHXo9BUy/YEZb
8dRgoOBfg1k+Vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$32980#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-26.99999918367347, 12.99999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.918446414813611*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"451405d2-d17f-4713-bc23-695dbe0072ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot sin(x)/x", Typeset`newq$$ = 
   "plot sin(x)/x", Typeset`chosen$$ = "Plot[Sin[x]/x, {x, -9.4, 9.4}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot sin(x)/x", 
                  Defer[
                   Plot[
                   Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4, 
                    9.4}]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot sin(x)/x", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x]/$CellContext`x, {$CellContext`x, -9.4,
                     9.4}]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[31]:=",ExpressionUUID->"494e1aa3-ff01-467d-bb0f-8d40683c3369"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
X/rrWh3JXFM/32VSDmmx0pNLJOrJyqPzbvVsk8fZySGl+x/rSdMOZsEjT3kc
CJnj4jZdT3aDXnXEYXk8d8PbuJn2gkTLrOnTPCuP0gPqL3usXpCX9710fYvk
8eq7RSbP770gRd/fvwuVpOBaJT3WlV0NJND5X9RHeQpqH1s6WRbYQAzLtZds
mE9BQ6bSi2uxDSQr9kjsfC0KKnxri9lR3EDStMRWFq+m4Jn1rqqK0o1ke5x+
v/o6Cu5Num3zjNlIFH84XI22paB3S96g4GIjl6vShpxcKOjAbamtc20kkTuX
pP08QkENt9CZwKxGYsHetn5XCAX7Up3Yic8aycyCUz+rwyj4R3tngi+3kQSP
1W28ep6Cl1LyS+m8RuJ3xfW30R2BvvS86BYjDtGZiMhKfkDBw2nWJsHAIb1u
953+PaIg64hDPmczh7jq/8htqaDgzHrrA3GHOGRzXYzb4XYKqiglzWy/yyHS
BnkSb7somPZ75GfMYw5piH9VtLqPgq8dzBJ9qzjE0kNdVmaUgqVy9zZavOMQ
k9+PK3Mkqfg5afSHlRiX/PB8t59GoaKNZlCqKIVL8htm552cT8XE1F+DIapc
sjBpg7+tFhWfVY9KBBtyiZpxN2NwNRV9lON02xy5pCNZmOuwjopbfyz+auDK
JYl/dUOf2lIxxjHt4Mp9XCLXdLQ1xoWKVUuP7vM/yiXcpSmneG5U7LL30ko+
wSWxqZW6LvuoaL5pkXVwBJcI+0pE6ARQ0cklZvOmS1xCmhcbXAqhopd84LkN
CVwSZuLUMRZGRV/N7trJFC4xu3482i2Kiov33Fnins4l43PSl9SeF+hxUxwP
vcMlhX41XYv+R0V34anVNtlc4t86GJuQREWl+ZeWteRxyeCNZZ/33qHiMub8
rt9FXDJX3nXC/QEV3zqGLPEr5RLtyDPSOx9RUeiE9ZbEci5Z++sBy7mYir/F
LntEVHHJHu9Xyx3KqehdWBhjUC3Q925q48ZqKr7T8h9MqeGSNFuWh/ULKn5P
fJ1bV8clpeUbjmEzFTvDbCcLX3BJ++IjceZvqBhsmvDDo5FLxm4l3TJ9L/Dr
fn11K4dLaLSqIuOPVPzZu+XKPy6XLInubzTop6J4+1jkaBOX2E/IfNQdpmJl
P6c6s5lLDviZjGn+oCIzGUPntwj87XSVZExSMX6pMtdOwPc3RTFU/lDRzdfv
61oB11blLFMUoWEp7/rP34L/e5e8tpGXpKGXYaBKqICF7ky7S8nT8GnndHSR
YB5jnkaQ2DwarklJ21Mk0GN+ziZWSI2GnTek2kIEendMH7n5m0VD3y1OsrMN
XBJyMLlwYgENR0daTa0E+yZ2V734YUDDXYzFYQ4CPwodvnaNLKVh/m0/SYbA
r5fVsj8HzGjY0fdSqoDNJbxly8X7LGg4J0P0oZjAb5n7buo9VjTcE/5TnSnI
Q0852vj9RhoW5HWcm33KJevjcte3baGh2lkrtXRBnl6zr11bXWhYzaKJiT7m
koxPGjF1e2n4K4KTSH/AJVWOttfZfjTsfv4r+dVdLumqDSgo96dh3tRM7sYM
LlF6QDofn6RhQ+mR2otJXGKiNsDPi6DhS8UzC12uconjJTmx7BgaZq8qd+u/
wCWXA92N0uNp+MFXb2qboM95fdFWqSk0pFS6Va84ySWcbXk7E9Np+PV+IeNT
EJeIrfodFZcj8KOZ53bWR9Af4dSOkOcC/TYP9+vaCvoTzP4e2EDDKIcxp3WW
gv58HRA+3EJDlTgxP92VXPKLY7p4XycN48jtbpuFgvwT2iIdftLwcVFu1YSI
IH+x2aSNUzQMcMLinTMccj9UK8/6Lw2Pq7aFxYwK7hvXo+3mUgpoZ5S23aKL
Q3ZqUxYt1FTAyPKjposF90lsbc1qsYUK6HyL20K/zyGlXqGbexcrID3be+pD
Goco3+sJvLFSAW8vVXpTHcUh7ToPSylbFVDTTTN8pROHOOpuXD/9nwIW/15H
kxhqJGde/NneflYB46eeiwx3NpLHvo/3P7mggObcN7z0pkZCyVa+dDhZAf0D
1BNOPmokLQsH3nzOV8CmwYu24kGNZKN+tCenWwHd43+WZf9oICc5K4Ky+hTQ
oMZZueRTA3lwYDg6ekgBqb5HpFNaG4hErmO2xbgC+lBtMjrzGkj9Ig1+oYwi
znU/K+Pp3UDWLq4Ku26uiPHxPuVZLS/IqiVTyYdSFbFf1lSSG1VPutdtam64
pYhmay/7iB6qJxHbM4R17ivitBmbo+BcT+pP2xzuLlTEKu1uXrFWPdnanLJ2
c5MiRq8yvk2priN+B1Z+N/qniMcKpCX8xmpJ0t2Ta395zUPDoMutg1BDfir/
GTmxZD4+tn8iVzBdRQbeR5/xzFNC/70uQrI9+aQwVE+IZqOCMSX+qtEqx8Hc
LK9q72YVVDuwld5DCYPaKcPwJ84q6Bz0buq3cAS0nzCZcfZUQZ9bJpR7Y1Ew
cwrGkk+qoMRhK7HnjRfAMmLbIP2hCno1mE2/un4NXsZGvtSjqWJj6rRhmWUm
7LQVvXJSWRVX6r13ryjOhF7Jc/ZchiqquLl92K53B8biLnIOLVJFn/xE3C5/
F5QvJdc+slJFSnlY4J72e7Dn6sPS5aGqKLtsd9k7hwfAS32fYdmliun/uj5U
f3sEHd67G3R6VfG3yAKRGu0CeG7cx5ccVEWD5dddvzsVQFLjiMXrX6poLZb0
OPVxAayZ/te1V1oNV4A8xfbAY7i4Y4FK9Co13LU30LXuZSHoKwVdrU9RQ6Wn
m974BhSDYt9kaU66Gp7delXdIaUY/uaHfbp8Vw1ZbgPXJkgxvF4fY7S9QA2b
X1WtPitXAidCUpsHXqhhrsHZ0OvZJdDwlkhKTqqhFuVUwOmXT8E3UeaM3TZ1
PLbcsf3N92dQ+8a4Od9VHUeF3h0Rp5SBpsJ2ZdpedQycyTQfMi6Drqu38zv8
1fE5L7KwJLgMtlwx/eAdq45bPlauD54og1VxHiYR5eqY/VNU2uVbOSQ3nv2v
r1odL3RdnN0hXgFjErmc9Q3qWFqvkCmuXQGPzo17yL5VR52SqBhftwrQPht3
KY2njt1vRbYaNlaAXETR1yINOvK9UqJIfCUcJO+NlRfSUeoTjR6QUwkNf/+G
nTKkY/GnGcKproSocFuFteZ09LXa2BbOr4Spkz3Q6kxH67B9Vu/XV8G2MpEL
S13pmEAVNe5wrYLC6YXt1zzpuEHpbUZEQBUcPh50yM2fju4Ljrc3p1RB7zGJ
1KFzdExxCt+9o78KoHjxl02X6djslKmVOVkFN8YcjQoS6bgqR0z1miSB7UE3
60Ju0/FY6J+IEAMCTQFLf4qU01Eh1rhwgT8BvYLta3yr6ciaVg15Fk4ghh8W
y3lBx/8yFtmPXyRg6f+CcbWNjk9l/pn45RAoOehmx+DRcc2ODyrmnwkEl0T9
Uxyj4xeKMrH4TmDpnNwn0jN0VPHqLpyYIvAoaVptWoyBEvu2NFeLs8H/M+sl
X5qBV0xX2BvIssHAwCb6K5WBq/KNhQJpbMiuThp5Q2fgiqOn5M6rs8FHpiqD
o8XADcfmH3XTYIP29n7naj0GOlq5qUgtYEPGyLLK/OUMFJpfu37MkA2pSq8u
nbdnYLdFYqkosGHH3inLCCcGsu4JvclZy4b5D5kTITsZOGhx0mPRejbEr/Xf
7eXNwPTRjh/lm9iw5dI1mutBBjo7qYo1ObBBrqOifmsgA2cMNHJKHNkQd1ja
CMIZ+M7Oj6u2gw02pUv7lkcxMIu7bWfSLjbMFdmVbHCegQc+770x7MaGWvtI
O60rDOxkMNLV9rAhKiX7n8o1Bu503eO3wJMNa/tan1CuM1Dl3AYxmX1sEDKc
9BW/zUBOOP7X5MWGquMM9b/3GVjRMfvJ14cNYTXWL8fyGHiVHbq8x5cNq+QO
Rw8XMgTvpbFzRvvZMLUj0ay3lIFPL/7rcz3AhpI75SMdVQzUGDi4bd9BNhzj
9Wa01jIwade2QetDbDBZKbWtniPQo8h8IHKYDT+jjCUrXzLwVUHQ3RsCLmjZ
UfmknYFcSesBir8gP5WIwJwuBtqLNp32ELCBV5bO7V4GfnGPPX5BwN/yW94n
DzLwzAnsvSrg7OnxS5d5DOxYNIcTJGAfK/ras2OCPM/RLYwFrH3FauLUDAM3
ZhnacwTzet8fzDkqxMSjpxTmgoAztBN275/LxMGro6FXBHr3HCmjecgw8fhn
o8JywT6Mss/1LjQm6iRE1NYI9u0SlTxlr8zELdz2qiyBH2kOS4ysGEzcffTg
Y18/QR/Stvet0mYif7Y8T0Tg3/z+08nG+ky8uyyu+pQ3G9qM7tstXCKYP/NB
6KUgjy11Y0/mrWZi0HSwlayHoA8UdT+ZtUx8FK56aMKdDU271qmL2DAxqfif
aIUrG2xHr0aPOjHx6cKFbV0ubJAwf2Y2sJOJ4yGfjcyc2VB/9tNI9x4mDi+o
3xCwVZC/mtE27kEm3ux5Ox1ixwZaYq/Y3UAmii6s13SxEfghk1QSFsrEoQx+
oYI1G878nVUyjGJixmpRF30LNjiGFjTMPc9E1rD8/6JWsUFzdN+Jj5eZWHz4
2n/lpmx4/pnT+b80JqbxPrS+EJyP+F2nL+zPYGKmbvLOG/ps2PvGePXa+0yM
MGF/cxCcJ+G6lJu/HjPRQ/FNqDOdDZbZPh4ujUwUovWnvJVkA0VDlWrUysST
jrtL74qy4VOq4Fi/ZWLXeWX1rL8EIi6YaD37xMT3LdZHbg8SYPsLf1WbYqLL
y1Oayc8IZKi2FgcosPBVtvLfAgcCEu8WyrnPZ+HInvWebpYEAhLO+NiqsPDL
7wvAWUoAZUyVNJks7CopAJ4igU9/bhx/o8/CuZ+tddzbq4D1+YC56VoWwi/p
C3M3V0HszdoETWsWSpXJqPwyr4LRnYwRORsWClcdSr2nVwXs169uDNizMGs0
yc1dtAo8as3+puxkYdgFnwDG00q4lTW3+ncAC8cunaar0yqBfXNJrm4wCz39
PsvnzVRAb8Kua06hLBSKWGo221sBCyLy9+eGs7DfxCu4p7AC8na40FzjWMhZ
iM+eOFRAmeT9fWV3BPsxOz8Nh5dD20HruSfaWejtoXd6Nv8ZTHgeGb37noXa
StpLzf/3DJR2pHa+7GKh/uVt5taBz2CX1ff8hX0sbFd141YsfQaf1a9t7+Cz
cJX4Ml+rJ6XAa/6SvUJSA2tmtrRI5T4FySXRdhPmGlg4qRZpeLwYuhYZfRu2
0EDzIdPrUi7FkK/bGfvZUgP1f24rr1lWDI7MJfVNGzQwZKLIs4VXBGlyXXjH
SQP/jL67sXlfESz6vsx0y0EN3Den55/1+idgn9PHyknTwC4fkf2BEwVwVXvd
hPu0Bq6wX+RrsiAb1jftf5w7q4GXHkQsP96UBbNB/zs0/U8Dg21/UW4czQKf
mu7exLmaKK774f25qvuweu/xVq6CJkrOq1eT3nYPBm89zF5pqIlesc17rodn
goWasuu8fZposN/tgu+5VBh7bjF/n48min0cevKsNQUeHPB+VbBfE2PM7JhS
yimgWFa4YVOAJrZ5ens9zE6CoR32JlHhmrjGxUtqGScBEpPOyP5I1kRa97qm
euZF2GjxoMHiuiaWbZzc/PtxHPzrb426mK6Jn+Nj2v2szsOB5fQZ3XuaqPnu
YMef/TGAbU+/7i7UxG2GcsdDSyNg4lTP7bxiTVyQd+zv09TTkKsl5j5Tqoku
fz3QsOYUzA9yfHONaOKZeN17oBwCXNUTl/uea6LVvkUeQ+uCIOL5LVvjek2M
WDx62j0gAEwP1Iv+1yjwY3l89HrzgzBM/U6amjSxqq6tKSrZG/4Pt5jt4Q==

       "]]},
     Annotation[#, "Charting`Private`Tag$35145#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.4, 9.4}, {-0.21723355372267017`, 0.9999940102105066}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9184464366948614`*^9, 3.918446445202676*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"e04387fd-efcb-492e-afbc-bf99960a61a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot Re HankelH1(I x*y,2) 0<x<1,0<y<1", 
   Typeset`newq$$ = "plot Re HankelH1(I x*y,2) 0<x<1,0<y<1", 
   Typeset`chosen$$ = "Plot3D[Re[HankelH1[I*x*y, 2]], {x, 0, 1}, {y, 0, 1}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot Re HankelH1(I x*y,2) 0<x<1,0<y<1", 
                  Defer[
                   Plot3D[
                    Re[
                    HankelH1[
                    I $CellContext`x $CellContext`y, 2]], {$CellContext`x, 0, 
                    1}, {$CellContext`y, 0, 1}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                   " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                   " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot Re HankelH1(I x*y,2) 0<x<1,0<y<1", 
                    Defer[
                    Plot3D[
                    Re[
                    HankelH1[
                    I $CellContext`x $CellContext`y, 2]], {$CellContext`x, 0, 
                    1}, {$CellContext`y, 0, 1}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"HankelH1", "[", 
                    RowBox[{
                    RowBox[{"I", "*", "x", "*", "y"}], ",", " ", "2"}], "]"}],
                     "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[43]:=",ExpressionUUID->"45dd6a16-7b2b-4339-9d50-e651b965aa2c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyVnHV0VFe7h0OwQikS3G1whyBtgQNFg1tw9wKBQLCgxZ3AYE1xijsEgmuh
weKeCZAEIkCw4lDIZb67n3e351tZd93+M2ueHmb2PDmzZ593/95TevC4LsMc
HRwcumV2cMj49XF7zwOnFlf1aMzjD4GWTx577xijqjf2Ludy3ID3NNK+2PnB
lOg0i8tV4dOORDtO/MotZ/PVOeV2W/imkiey2HnA9Qo+FpcQ4ee9Vma386XV
r99xs0UIv582Mqedt9wwOMnXzSY8g3szJzvP4GD/L054ubjiBex8wImA5RaX
BOEund4XtvMLIzcXdrE+FO52OaS4nRctPma3my1J+Jqah0rbuWfwD3WslkfC
z21bVM7OIxdku+zr9kR4fO7Bley87g9R7Wy+T4Vnn9Owmp2vfrY7Oi3tufDa
LwvUsnOe4xWfPOex1rS5W9Y80J7h1r2ulfqW9BfP8DyPvM8H9vEXz/Cje05M
f/Grv3iGh84esOpyhL94hu9sfLryT/kDxDP8WcbOc6Z0CxDP8A6/NAkevDZA
PMN7udbunyU8QDzDN62dMmFogUDxDH/ft+CA2T0DxTM8wvv+9F4bA8UzvF3c
pApv7gWKZ/jaeieG7M8TJJ7xx/nJcXB88pzHWwMPTbF7wzN8V4XpZex+8Ax3
7rj5mt0DnuHRtRoOsn9ePMN7O0UNs38uPMMzja/R3T5+PMNfpO286NwjSDzD
l76Lv+G6JUg8w9vnfLK0YHKQeIaX7NPRdX6tYPEM796+1YndM4PFM7zhmUj3
JbeDxTN8/vv3q+sX1d9nPPF9xzOc85N/D8cnz3ksWr5ie/v5g2d47crug+ze
8Ay/8fJh50bOQeIZPjxvlWt2P3iG/3JvS3zBHMHiGV5v8smDdg94hq8/Gtiz
/Ktg8QyvMP1Vl/NjQsQz/PETnzZej0PEM3xi1dY/+o0JFc/we/2CJ654FSqe
4c+9AnflmB0mnvHB/IlnON93PMM5P3ldOD55zmPxAtnO2s83PMOHNTkyz35e
4RkeN6/Gfrs3PMN7Hr82336e4Bk+0dOxTdnLIeIZ3n3xrLp2P3iGL6o85/D8
0mHiGb62zMVxV+6FiWf47EwFjibvDBfP8JGXBrQbPjFCPMMrDPj+r6PtI8Uz
n5vfIzzDmT/le6g433c8wzk/eT84PnnO47miI9sN2BksnuFe5Ze3t59veIZ3
bh7rc79JqHiGN1nhecDuDc/wF5eeR7rnChfP8Ix9agZN/DZCPMP7lp65ZUyB
SPEMf/tto+ZNakWJZ/jcX443fdg3WjzDvy+4oHTv32LEM5+P33c8w/k9wjOc
+RPPcL7veIZzfjIOOD55zuN3vt617echnuFVP470tn8f8Szfg0bj99nPNzzD
E60Z9t26HyGe4f0Gjmli94ZneJPE0Bupv0WLZ/iHwaN3e5WwiWd4noVPDmW6
GCue5fNmiV/bYvo9vX5Sn4P1Ep7h/L7jGc7vEZ7hzJ94hvN9xzOc81P+3orj
k+c8lor6dUNCZLh4hufd0jbZ/j3FM/zGhb3dXidEiWd4//mvC9nPNzzDz611
Cr46OVY8w/uOifKye8MzfOOpWQu8XePEM/zAq6XuORbEi2fGy/oTz3DWS3iG
8/uOZzi/R3iGM3/iGc73Hc8y76rzk3HD8clzHg9FZC5uLRktnuFtPbPtsJ+H
eIaXuhlRP0vHu+IZ7rW9mdOxk/fFM7zWyyzfRVWJF8/wEb8eqd1qc4J4hscM
a+tuqa3X8YyL9Tye4aw/8Szzn1ov4RnO7zue4fwe4RnO/IlnON93PMM5P/k8
cHzynMcGjlf9b/16VzzDP/S/c7Ru1TjxDP/uc6krY47Hi2d47zYLwvIPeSCe
4Zldnvbz/ilRPMOLDMr3/R+uyeKZ9+f6CM9w1vN4hrP+lPWc4qyX8Azn9x3P
cH6P8Axn/sQznO87nuGcn3xOOD55zuO9J4PLdI2LF8/w89Euu8befCCe4Qvu
d1y+/2mieIY3OTEq8GrXFPEMHz+6wJWCGfX1JO/D9Sae4Vwf4RnOeh7PcNaf
eIazXsIznN93PMP5PcKzjFPNn3iG833HM5zzk88PxyfPeezxcU/IlwpJ4hne
MV+v2BKRKeIZvm9wlmVX456IZ3gmr6mp/drq63Nej+t3PMO53sQznOsjPMNZ
z+MZzvoTz3DWS3iG8/uOZzi/R3iGM3/iGc73Hc9wzk+8wPHJcx5HHHzasFPV
VPEMxyeezRzP/DvqIXiGc/2OZzjXm3iGc32EZzjreTzDWX/iGc56Cc9wft/x
DOf3CM9w5k88w/m+4xnO+YkvON54buZ4NnM88/+pL+EZTj0Ez3Cu3/EM53oT
z3Cuj/AMZz2PZzjrTzzDWS/hGc7vO57h/B7hGc78iWc4fvBs5ng0c56beeKZ
LHfKu+yQx9Q6datVPaXreHCXrE6f7XW8IWuNNW62Z3L8h22X23k3D5DXhc/x
HrrJvt7mOf+O43l9ePEzlWpM/Mfr88g4eZ7e+KUuahonnNfneF6HcfLc/L4x
QRtqVXKxyuOZrjlzlj54x5jW1MPX1+258IWjC/lNnewvz/n/cJ7zaD7P+XdN
Rxf92z5+juP/V3ItVdM+fo5jvNfKtpzeZpq/PDe/PsfzOry+nJfq//M6Uu9W
r8P78jy98+pqr6QJjk4pwof7tGlZd++z//qd4vz0qNW88axnmk+p+fPPfxVO
/a/5luf8fzj/3jxv8H68P5zxmcdfdESvhA/dnxuObZ7+uHy6Hn+Wntuqb41J
Nfb+Hrx92urHwo9lWJ+QUuiZ8ebX9ze2LtTj5zj+HbzsnJoTZ5x9Io9w3o/3
h/O6vM//5Tm98afnP73xp/d3Sc9Den+v9D5ven/H9Lyl9/dNz8//9++env8c
08blyOBwVNfnnaz7a8TeMTo4f+vh4HBZvh/j8z7IYP9ewDn+Y+y2LKNy+xvr
D9wb4OBwQ473qvtTZvvxcI6P7zRwmKWFvzEuT6/yDg7/qOv32P6N/Xg4xw9s
XaHYwK/f07z+V4s5OOi66U1Phxz24+FyvXh64rwSR/2NrwfldXCIkuOTNw7I
ZT8ezvGLjrx5OzDJ3+jTfH02B4dYOT7zxYv/qV+l/ee/+/+1P8XxvE77HsvC
KxYPkOPN+ywhd50/paXpukJzx5n/qSfAOf7qqp9GDFseYOw89/PbtLQHcvxQ
S2wx+/Fwji8Q92ba3WsBxmTvLS/T0hLl+AUtfyxlPx7O8Q823a0c/znAaD0l
NDUtTV8X7hn5W1n78XCOvzXVL2V8/UCjiOs3KWlpeh/t5tIP5e3Hwzn+tkdC
pdXjA43U2o0epKXp66EnB3tWth8P53iPKteHNzkYaFzMPeFeWpr+fcgVeOo/
60w4xyfXmlh0TnKgnLesg8ZVWmiZ/fU85PyEn59QcOiyafr8hOf97Db39yR9
HsLH/LjcI+Tr34vzCl77Yc8BZa8HyPkD/1BpyI7tX/1wPsA7pu4N6Pn1c3E+
mPeD+LvDnTqsHz+vQ5D8feG/n+mycMXyIPk7wq/tqpAQcDtI/l5wX+fiL9rn
CJa/C/yVa2qDPB2Cxb+Mc+ToISVXB4tneLn4T86zw4PFM+vKhBp3WwxtoT3D
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
jT9fWFn/eBddx5unxv/N9TNdKlfT9bpravx/tBx82dMhQHxmV+MvsyWl3NI/
/PX1mhr/6UzJI/NN9hePs1ZOOGO1XDFG27L/q24mdZ09g5t6j9Y+G55o1SvW
94LxpeB3id+e0T7vpk29c8rtnFFm08Ymhd9rnzPb7jfWWM4Ys6f7vfxUQdfN
SmywHR9r8zUm7rxwPalVgPi8mJCjfBvrCSNX3qfTMvXQddTdqh6V0VQ3m6rG
X9M9ccu6Wrpu1lqN/+iS4KPtXHTdrKYa/4ueM1IG9NR1s2A1/pPWFq369A8S
n+PV+HNk79L5z95B4tNJjf+z377HZdsHyff9hBp/jWNz6/zlHCSe3ww4lGpx
uWXcix/0r7rZn5lb7rZabhpxfrV23ojUnnksVqxI8Vn9dd1seOcphcfa/jSe
7H1zpX2Urk/We5cr1OZ73YjI0uH0k2a6bpZl897lLtZrRv4jjlXebtX1yYif
mrY85faHcchvfq3Xj3V9soSqR8021c1eqPF7nXxYukInXTe7rMY/OlOLvyot
13WzVWr8tx9Vve96KVg8D1TjLzIzcFRoiq5P1lTj37xv+egLWUPEs4Ma/6Tg
n4eWKhoinoPV+HOdmBz5oXSIeD5V6LWXzTfYOLw+37/qZltHXx5jtQQbByZt
cmzcUtdzFl1c7uJiDTIauYTty51N13N4rFxpc9ypK7o+efhGmyxjbQGG6/Ww
S871dd1s1tgHl2y+/kb79e/2bFio65Md8s3wdLHeMZq1avz3S39dn7yt6lE9
THWzE2r8+bO8jd2+RNfNNqnx+zdrlzftRYh4nq/Gf3tT/w6lO+m62Rg1fltA
z/iLu0LF8141/pInT7u7v9D1yalq/NXzrEw7XD1MPLuo8WfsP+thcH9dn/SY
s3qfxSXCCBq0K+3tP+pmfcL6LbT5hhsdO8aMyHpKe25WofIQqyXceFql8NGX
p7XnKtPeGi7WMOPS/jpFBvfWdTMeG5xOPWoJ054/lfT64OsWajz3LO/7S2td
N3swoU+Emy3EeFp02O3vfHV9clE6dTN3Nf6ElzuynIsLFc891fg7jZ04cfN0
XTdrosbvcLCa76tcum5WUY3/ebnZu99vDBfPudX4C5x1SztaPEI8v1fjn1F2
ZliSNUI8x6nx9x+Vyc/yQdcnazyu/oebLca43b36v+pmBRt92mpxiTFOP/Ws
WaeyruekefnNsPlGG1PrRoypWF+fx8kJa3pZLdFG2A/Zv7yM0p4D6w6s52KN
Mk4UGNyxrqeum/HYce7rFp4FdN1sq+39c1+3SCPDlaw9shzR9clm6dTNqqrx
b95ycf/wnrpulk+Nf9rqrZW+r6nrZn+r8dfe2cjTmknXzR6q8ZcoNfdOzdBI
8XxHjf+V5+Qrnt5R4vmEGv/U/Xv7j+8WLZ43qfG37lxozFGHGPH8pMudWF+3
+4Z753H/qpuF7vr1jJvtnlHj+zffBm3Vns+9H7re4nLPmBNQ9OiRtdrz721r
edh87xr3E6bs/LOvrpst2/K5o9Vy18jeLui72PK6bubx8mZVF+vXdUSfeQM7
vdSeZf747futlc/q+qTM06a6WYoa/1oXr36xryLEc5Aav9/dmErj8+q62Wk1
/oCfP3QY6qzrZtvU+BdPu7Q4Q7cY8bxYjT9pw6S8OcfZxLO7Gr9jktfs03Ni
xXNPNf46IZ2cFy26K55D1Xhd1PoHz62ybvzZ5htvTIgrN/vtt/r691zNDFG+
bvFGM+dmOSq+0Z5r9h7R0mqJNz4eCFpXPEl73jnP/4SbLc4YO7+1x9q72nOh
Q3XKuljjjCNzmx6Lj9b1yeUR3qstLnHGng7lysZH6fpkf1WPymOqm/EYU69n
1U2+um7WUo1/mmPvVz0q67rZWTX+2Pm75s7ebRPP1dX4/3LatC5zxbvieYca
f1iw+52iB+6J5wJq/Gdybk5Ylj9O19vV+Ae0j0qoHKzrk7WsGRdbXB4ap/Id
yP/PutkuNd5jal2E58KJgUNtvl/nv8NpFw/01PWclTnrhfq6ff18aYVf1puk
62aODTY1tVoeGAkePw6I26zrk5MHOR51syUYe1faKhcI1vXJx0tHlnCxJhi3
q0U13pcjQjyfV/WoP011s5pq/AkXjt3y2KnrZjx2eWfdPmOarpsVUuOvkemP
D6cH3xPPy9X479Rc+OxdVV03c1Dj71NixILn1eLF80Q1/jKLmgxaXCtBPKeo
8U+tNcOnu/MD8ezVMiSfizXJKPAxYcQ/62YZ3RvMs7gkGcPWvfX4a5H2PEWN
945aF+E59WqmgTbfRGOl2955rtl1PWdg6qgAX7dEo3v9OR1bj9R1s7D8wQ2t
lkQje0rO4w8jdX2ytVH/gJvtoeH0Mm19sR66PlkknbrZSjX+41nHf5p3RdfN
HNX4r6eeGP86m66b8Rhax+nv6NNx4vmxGn+PYt9WCfkYL577q/G/Xd3l6e+t
H4jnEDX+gJ2N8zbd+lDva6jxt3PrUnnfR12ffPpx23Y3W4oxpuCof9XNBlmy
5naxphhPJrcJeO6nPYe3d5tlcUkxAn+9MfinSrrO00aN965aF+H54rbv+9h8
k40Ce2bv7dNI181q39p609ct2VjdqFdAl+e6Prn7VeYGVkuykVR+jvXFGV2f
nKrqVKdNdbNUNf6kC4XrtHTSdbOBavyp60N7HH8eJ37D1PiP3v7NxXNsgnjm
saDHgo8VM+m62Xk1/sNez8+sOpwonmuq8bf+5fMy91HJ4rPtkXHVrZYnhs9v
+f5VN7sUFb7JzfbY2Dqs0Kt22XT9oY5jw29drI+N13ezl1u5XvvcW2WHp8Xl
seH8fujMc630uq2YGlchtf7B56pZY7vbfB8ZV49NHTipkK6bZdobds3X7ZFR
evKJ+Hf1YsRnhKpT9TLVzdqo8bs2nNLgpr+um11U4381+uCcLHN03ay2Gv+6
NiUGevTQdbPdavwZpgRfbtkpSXzyWLD43N6bf9b1231DGp/zdXtqDBjuk/Wf
9bHiK3ZWslqeGhUvFm/u1O4fdRvf7L+62VKNAxs2p3bPqus2WeLcs7hYU42n
b0L/WP9Ce5uWLXKixSXVSDt+dHhSNl0fe6b+ntPVegZvg/v+3tnm+8SYtfOz
kyVI1xudVd3J21Qf26vGX6Jqj11daun6WDE1/u98fLI9aqjrY6vU+Bce7PZy
jmeSeMukxu9U+sCyeskpcr7xaK6DDVTjNNdzshT6rrXN97lRbNrFlF0HtE9y
l2Mm/9yl9Srt89moaIvV8pVv/Wv8uena52CVX53bf0Gdrdt0HSzywq4MLtZn
huvl9ue3O+p1bdvkb90tLs+MgmVmrZ+xU9cbL6nx1lPrFnyuUvWofaY6WCY1
/txBL53W+Orfp6lq/I+rT6+/s4Kugz1V45//JalPSkyKnGcRapzmOlgbNU6z
t2uq7jTz/PLsZQ7qfFR5xR2XFJ80M5e/8FLq301fdaNm/6k6N3VZ/f8pinM8
j+a/4zfq85p5evU6clzdXs77z/0QOJ56/oHgQgN3d0iVz0td2iP0WbGSpZ7K
+cbrlyrbc9qMSvp9d6p5+FvvFxtb1nkkr7NSzTP9Bs3O98M2Xfd2VPPMs0N/
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
8pzXG6TWh/xd+Hceav35PyeSITY=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
vu+q+clYMLh3tDtk/rdgr8fwLuP+xPlRdeBXiXs7qgNXBffBdJ21jtGz/DzX
f1Bwn1Br8D7B9133vze+M+M1eLfgfqnW4O9F32Otf7UOnsn+pVnXs4oJr+Hv
ovs4qmPnB/cStcbsjsdkvH5XnbsDf8HxC4NjhdaeC4J7ekOUG4NjrOrTrdHP
gNbgWovr3Obyu59Gzyety24N7vdqfTcguNeqfsLQ4PPUen+gYmXG/YeHg/t1
N+t8gs9nPB4f3AfuHp13VDMqf40L7gN3Y/+w4PmseT0WP4S7sH9McL+3K26R
uqbU38wT3AOpgAsox3Pu+Rifje79ae6tiu7D6p6uie5XaE3UnG00v/sD43PR
62jN+Q65+6Xr0yw4nnzH+EOu3lLd9e/oPqOel/ap6yTF0nbBz+lhzefovpXm
8Pbo+HJE8yU6Tv2O6+fuhfLesVxtoZqkdXDM+UmxP7q/qfnZNjhWHGJsExxz
fmasGxzH9jN2DI4/vzA2CF53HAhea+h6v8p4Y3D/8G/l0uD+0n+Uc6L713oe
tU5RPdiWz7cyuieu51drBtUCWgv05/u5+KTiR3Cf8ATjH9FradVR/YLXRH8x
dgqO+b8yNg2O298qDgXH6oOKMcHx+Ws9i8HxUNetSXB8/obxp+haWeudd6Lj
73H23xLc2/wnuP+pz9qY8/8luv5W/fxjdO9bdfLg4F6rGoF7omNrlvHL6D7s
qYw7o/PBMY79MDqm67p9Ht0bTRn3R/d/T2PcF92fjYx7o9eECeNn0b28wPhr
dP9O65SPouO+rtsX0f3ZU3QuwT1YncOu6Dz0B/vezeWMP/H70flG1/bj6Jyk
e/FJdP7QdfggOtfq/u6OzmH6vBeynVQuY3/f3HOnGPVbdJ9R67jR7F+a8Wf8
PbrPovr5cPS7BK257g7uUeuzH43uy6jePhT9HkLryhnB/efT8c/R7yq0Jj0Q
3YvPw/h1dD9ax9QOzu9fMX4b3QfXcz05uAeu449E93q0vhgR3HvXdT4Y3dPP
y/hA8PsI1UjDg+sWxZaRwf1/3YtRwf1/3a9JwTWVapshwf1wzYfHo98hKQ/e
Htwz1z16M3ptr2dtSXQfXOvHF6L7k5rDz0f3HvWeYln0+yflzSei3z8pn74U
3SNVnHkxum+p5+LR6L6z1qe1Ur83Ug1ZM/W7MdWWNVK/M1N9WD31uzTVkH9F
97C0rlkR/W5MOfex6N698try6Pdkyt1ro3u/6gtti66f9Jy+FV0z/aZrGV1L
qY90eep3Ocop66L7rrpfr0bXbYpdXdnuyTjWbYruteoZXx/dB1a8ei26/lMc
ez26zlN8eyO6zlMs3Rzd49WzvyO65juKL0v9vkp18vHoHp9ywcboHq/iXpXU
75BUw5dN/T5MeeTS1O8UVbd3Dq7T9Bmrpn5Xpxq+Yup3bKrPrw+uxxQHegTX
gXoeK6V+J6e1QLnU7+2Uy8qnfm+nfFc79Xsy1cm9gus0Pb91U9fHypU9g+s6
xbEyqd+9Kfddkvq9qWr7eqnfgamWq5z6faHWI12Ca1Fdkzqp37epxvsvrMyV
Dw==
            "]], Polygon3DBox[CompressedData["
1:eJwtmmXA3VQWRV/uTXF3p0WLFbcCLbS0uMvgFHd3d3d3d3cb3N3d3XUYXIZZ
qzs/0peVm5cvLzn3nLP3bb+Nd1h1+9Lr9dbhn5bPY2uvdxefZ8Pz9On1Vufg
UfAFTa83HXwS4/fBFzK+ALww4yvBmzE+Cnwi4/d6PuPzw0syvgG8K+Pjw0cz
fgd8JuNzwUMZXx/ehfHx4AXg5eGN4QovDv8L3h4eGx4GbwjvBk8AH8P17oTP
4npzw0fCt8NnwHPCB8LXwSfCs8Fr8f0T4Sv4/kzwavCR8PlwP3gP+DH4LXg4
/C/4BPhyeEb4HK73JHwl11sMPhm+H74IXhA+CL4ePgmeHT4YvgE+GZ4D3gW+
ED6k5O8fAt8InwIPgPeFr4KPgWeBd4LPhw+CZ4AX4n5WhDflfvrAezF+BXwU
4zPDh8IXw6fBH3HuYfAl8Onwx/DO8AXwwSW/ZzDH1oS343pjwQvCK8CbwC18
Ouc/Cl/K+QvDgxhfA96W8THhxeDV4W3gMeBV4QN9/nBf+Fy+/xR8Fd8fBF/i
+2RsCY71YewUtgfYv5jxhRg/C37c5w0vAh8HXwOfC3/qd+Hd4C3hp+Aza97X
ZfBAzj8bfsL3Cy8K7wNfCR8N94fXrYnnbeCpu+v/Gz4HnheekWvODA/iHn9k
/wLGn4WvY3wJxs+Hn4GvhReH1+Ocs+EbOX9WeG34DM9v8j42aPP+bmsSD33h
SeH+8Lfs92ebCx4O/+y5vl/2F+TYn/yNXdvMt1c4NsT4aTO/Xm5yPzPAM8GL
wf9h/0K2ldlfmGN/8/2d4XvYf6nJ/W7ZJj4fbTJ/L3D+sr8Qx/4yJuEB7C/J
sf+yv47PGL6+6Z4ffBZ8Q5P4XAreGN4Lnhjeuub8vUvm09KMbyIzPgm8Sc38
26UkPqZjvC+8AOPfe62a+bYz49My3o9j08LzM/4d+7u1mW+vwkMZ37bmfvYp
yU8bt5kP9zbJLxu2iffbm8y/EW3m3x1N5ttG8OXwPU3yxaZt5t/9TfLf+lz/
aOOd60/j/beJp/ua5JvN4KvhB5rEzxptzr8Qnt580Ca+X4NXgy+GV2V/EY79
wzVXgvdi/4Qm8bgMvKm/B54UXhbeDN4XngxeDt4c3g+eHJ6wJHaMoZ/YX57x
Ldjfn2NTMD4zPCc8DP7Juc22NXwgPCXj29XE774l93tCTbycD88HL8r5q8Fb
c/7o5sua+b0J41PBKzO+t/m1yfMZDo+Ad4cnhE+DBxs7HPuG75zH959m/xr2
BzM+DePjwZNxztfOJbalfLYc+9nfU3P99Urud+s2+fLxJvniHHhp3xXHfuGc
rdrk28ea5OPt29SHZ5vkgx3bzPfnm+Sjc+FlfHcc+5Xv79Cm/j3XJL9fBK/C
/kCO/Y/xLdrUk0ea1Ldt4Nvgp5rkx9U4Zw/292SbyHzG+FDnPuf8wNiZ8BB4
Nvh7+HR4cecS/C28XZv6+EyT/HcGvIS5hWPfMb5tm/r2dJN8txzb+033TGve
5zHGB+e+zrn71cTnsSX56SGOncT5+3BsRcZugw+Bt3OOWTvhQ+Ht4QWt5fCx
TXLuMGs/fBy8O7wUPLTkXfvOZ4CXYVvammjcd9vxjO/Ry9jhbJf6vPjeJ4yd
Ct/s74E/hy+GH4RHMf7b/OYp4XFKnsWNbWLbGJ+Nc6f077G/COPXmuvYjmF8
V44Nrcmhxt6UJbn15jax7xyYm/Gb4APgLeHZ4Vvhg+Ft4XnhW+CD4G3gOeHx
4EfYf4NjS/I873a+s78Lx5awt7HmwjvAC9cuxzt34a9LYno69icqiXVjdnp4
4pJYNgZngCcpic0v+JwYHpXPk+G3+BwF/p1rHgF/Dk/k8+LzJPhdPkc39zN+
NPwmzG32foMPhx9sM1edU86t6+Ed4bXhqWtidGr2xyuJXWN0KnjcLnZXqomV
DeGHrf18HuG12e50brEdxf7OnDOYc19l3P7yZ44d0iYHTA6PVZIbjPkp4LG7
uXAX25Gcu5M1reaZ+ezG5PNUxt7o+tRfOecwdqYy5uBFOX5dm9+wrN8t+W27
lvR61hxrj3PYuTdNydy2Rjq3pi6pndZA5+JUJbXxGbbz/H0cW7umZzHXzFDS
y5jDndvTluR2n6mxsn7Js37JesH3T+LYpvYSbWqDNcLaMk5NLRjA+Vcx9rxz
gPFjfcaMPQdf1GROb9DNLWN13ZI5tmlJr2VONje/wLFL4OPgEfAoNbltRs67
lLGxanqD2X0ubWLed798yVwYs6YXmA2+HH7UOcr19ufYKoy9bH2ET4Y3s1ez
P4APglf3fcPXwKfCW9TM0bXYX65k7h5aUnutwfbCb5uf4YvgXWtylr2UNclc
9gZ8E3wOvD38pnMYPhfeAf7AmG7SI+4PT8w2hP35+DtXt4nRkxnft5fYfb9N
rTYnmhvfg+9ukpP2sDbB5xpb8Fr2kvBZ8MHwGvb+1ihjGV4TfseYbdJz71bT
k54DH9pLr/oKfDV8Crw5/Ah8CrwfvDL8rnOmSY++O/wafC18Grwl/J19onOL
33OXOZ2tWuv8G5z7HjyGtckYgZ+DR7XXYnuy5BkZCweUPDs1wROM3dSLVhgC
r8f+zhwbt0+esbG3f8mzH69GD8wJ/9HmnpwLe5Xc66kltdiarJaZoEafzMXx
PxmfsEYfzg3/BU8ErwzPA//dxdtS8Kzw7/AY8HB4Fvg3eLIafbEg/E8bDfNk
k5qhthmdbRj7/Rn/1dgv6bUe6EVbjMa2JPszc/yXNhrC2m8PYO8/aU1/swDj
/2sTAz77I0tiw5g01g8riVXfse/y8JJ375w0thTRzlXnrO92h5K57Bx07uxY
Mjed89be7UpygTFobB9XEpvP+5zgW9ieKYlpY/34kli3xqmF1cTWPnPeDk3m
mLlw8hp9tpBJt09ylrV365JcZg4ylncryU3GpLG6R0msOmeN/T1L5rIx6Vw+
oiRWJ2Ebjb/XY7uhJgc4F3YvyQ3OEWvh5iVzxzlkr7BVydwyR1gbNivJHc4h
a/UWJXPrHT5Hg//i+kfBU9To04U53vB7+tf0x0uV6E3ru1ppihK9pkZQK/Tl
2I/GFNv87E/G5w+M/cHnAvDkJXrJ+qLeG6OkVtuD2ouOz7GPS+5HvfYnx75i
7KsSvTU6n9/A1frF2AQc+9R75P4Gsd+3RD/Zk9ubT1Cib97nc0z4H3N8m+/4
3ZbPE+DP+JzQV8fniW36+wWb9Az2Dh+yje3j5/P4Nj2cvcoGJb3dB3yOBVt0
j2vzDOz/xy95NuYce7sRJblITTCs0w+1RoMO7/rvFp6+pB+35ln77PFGsD/E
PNMnMWgsDrTO98kzVYv6TP/o3smgrv/3Xc1UoxeH+Z77pD7Yyy1b4u/4NxeH
pyu5l5lr9OPwEv0xa43+WabEr5ilRh8tXeJH9KvxkwaX+BfT1/hFS5T4U+aI
5ZvEgLnDd6TW9Rn57u7nvI/Y/4rtMfanrcmPg0r8KGPC2ColseIzGwz3K3mW
vmO1bL9e3v10Nf7X4iV+jTXU3nCjktq6BNu68E58ZxzGB7bJj5s3eb7WsC3Y
X6WX2qaGUcuM9Ois7SXn+h1zq5rG/HZ3L96LGlWtOtJTqtHEauORnkiNxlBr
jPTQajwFvQU9B72PsWu0zxz8nSvbaO5Xu/x6UY3mUfuoSfSK1Mz3d/VVL1FN
rbZWk+vNqZEf6Oq1+VcNo5YZ6QnWeBx6HWr8C2vy+RNdvlcr6Knoregx6H3p
YV3e9Xd6W3pqV3T9lv2FHp5enp7SFTU1YLkmOcHaMIzxN5t4SJfXzOmZmsx5
5/pn8Avd8zze3A8vAs8If1miWZ4o0Szen56K3ooaVK9UjaBW0EM7sI0HcXvX
/+gN2g9d2fVT1ho9Fr2WkZ5GjWekd6SHobeo53JD1x/pFVp/7+z6D+u5nsYd
XT9lPVbz3dj1T9YaNavaVQ9Ir1YN/XjXD1gv1cyPdfVcb9Mee5omOcne+5ma
/lCPSj11BzyJ87XTI2/W9JPWJGuTxxxTw6hd3qipVdYwa9lb8Dq9aBD7dXsA
r+3fsDd42zxjLuHYkfZaNfph1k7f3Fpzb1N1/dBtNXpomk4f3FmjH/p39eTu
Gj05oMu/t9fcW98m+ujfNXpk9q6fuqdG/8zVJJ9+Yc/VxNN0fk3CNpT9+bnP
axibEV4VXhK+AX4NXs753qS/f7VGn4xoMp9GheeDZ+L8y+BXavTMhk36czXy
4yX9gNrZGrZokxpkbXu5Rv9u0KRff4vtFvbP85ky9lJ3f2s16f+fr9Ebehrq
n9e7+zXHmGuerdEHeoLqnxfMOb14VuqbF2v6az1c9c+LbJeyf7y/kbHnunyh
B6me+pDtId81xw6oqaEzNKnx1lbf6YxNYsh3vRTx93YTD/fKGo9Lr8saMbzG
A9MLswYsWeNx6QeoidRGemZ6Z9aEITX6SD1pz2HvoYek/lejqdW+YvvSd+J7
YjuP+1m2yTv5rcSz1Lu051i8xiNTv6nH1CfWPJ+978BaqAemvrbHs9fTA3Vt
Qc9Zb1SPT69P/a0XrT5VP9mT2ZvpYbrWMtJzrPFI1XcH9aJfrUGujdiTW5uM
mbWbvGNjSc9J78kau2jNmsFlTTzVnbp89JB5rRcvwxq8VZMe2NqsJ/diEw9Q
r24V+MEST+Aja1yTGml7qbZ3TeXWJh63ay36Ad6Df1v9rof4cBPPTG9Rj0Cv
YEd4Efgx+DT4AGOsxlPUT1D/q2ftyddp0sPbq+sJn95E727cvb89e/GY9Jq8
5sAaH86/5TF18pfdubfU9Fv2bPoR9pTrN9Eg9pr2DK59qGHsJZzD+nkb9TK3
V7cHgJ/vpf/1GfosP2cbv43Hq/6wHuhl2dOY68x59jr2LK612DPZy1jzrf32
GANq/DTn4qrd3/P5P8CxT+BxuP4y8Ltd/rma8dcY+7iXnmVsxu+rOfdTtnHb
+IPqRvXjsuyvwPZh061pcO7y8AdNt6ZhLoHfabLGdRW8IvwR/Bx8fU0P49qT
ms7exp5Mb1iNZq9mD+bakD27vZkab80m6z32J2rC1Zv0TGpFNeEaTXo+taI9
mmuJ9jP2bmq+dZtoPLWgmma9JhpRraMmXa1Jz61WVRO4FqUGUivYH5mrzFn2
T/ZU9kv2U/ayal61rz3jPDWe9e7d+zaOXNNwbWMTeFDNGqVrlfZ089Wsabq2
aY+5QE0N2LJ7f9YG1yhdqxwBLwTv28ar9Zn77PWY9ZpHrkExvnebZ+879l1/
U6Mv9Wzt77+uyS3mGP2lb2v0ph6HXsc/NbXemq+XMi+fX/cSE8aR7/wd9u8u
iQXNNPWlHot6/4savajHq9f7fc3c1AOyX/2uRs/qYagfnLPO5Y1L5vJ7NXpE
z1Tv9P0av1BPVW/1gxr9oees9/xpjf7TQ9VLtceyVpzX9V6f1+hHPWi96M9q
vGg9Xr3eD2v6aT1rvesjjAm4wBP5fT6/6WWO3lxSS//0ZzfR16O3qa16CnoL
xvwb8O0lc6FpU0v1nPRP+rBd1otnpD9Q2vRe9mD6A20bL0lPR73sHH0TvqPk
fdqDvgbfWtKb2kPYW15d0ls4B9/2+yXx4Zy139Djdy7r8b/Vy5yW7cFH5qKS
3tyeeeRcLemlx2hzfTWB3oc19XX4tq7W2vO+Ct9S0gvXNl6Unpb+xj5tco33
4L18UqPv9Xj1eu0p1urml16jenHNbj6r5eZpk7udw87ludqMeY65Yc82vbk1
3/v5paa2WmP1R3Zv0zvbo3t/c7bJHeYMc8d8bXKBOdxcPm+bXGGOMFfM3sYf
sKe0t5ytjfZboYm/NH+b3G8Nt5bbo9mr2aPpzc7aRiuoGdWOv9b4Y3qy+j0D
2uQec5q5bQ62xXrJSeamj7r54ZqAawP2aBt09cb+9vea3knPVn9Ij1u9rH7W
m/ijRhuoEfRr/qrxY/QU9Wv+rPGj9GT1X36o6SXsKfRXPq7pfeyB9Nb/U+PX
6Gnqz/wPPr0Xz1E/7+8a/0sPV//HHnTDrr/RO/6xxi/SA9Wv+W+NX6Tnqff5
U40/qIeq3/Nbjf+op60ftlGXT3Yq6R1/ho/oxWPXn7Intje2B1Z77tWmF7Qm
OR9fLlkbsr6qu6xJ77J/T0mtGq2NVlQz6nWq0ewtRyvRbvb09vZqCL3TR2r8
ftcoXY94qEbbDWyy3nJ/jfeiB6M/80DNes1CTfwZNYXaQr1oP/tgzfrNwk3W
Yx6u8T58p77bd+Ctellz0m/3HM/1mq7lGJPGpjGrF/p2TW9rj6t/bg9tPjqh
pLcepY2WVlPrH75b09va47rWNWqbfKpHrn/ob/K3eY+uLT1as/7hGqTrL4/X
rGe4Rul6j36f+eUftqnaaCS1khrLtSU1l9rLnkpvev82vYU9g+9jvza9hT2H
9ebeml5ynib+1cFt8pU9lb3VYzXrM655ut5nzzlOV7vshew/9edcM7bfebqm
V3cN1/Uye3bf36QlvbwaUa2oBnRt7AnOn6OXNVnXt56s8bb0uFyPsye0N9T/
s799qmb9xDVm1+eMAWOhXy/enf+nwv9b4f/J8P+G7NjN5wNLtJi/0d+qhvyw
8+TUkmrQDzqPz1gyxvT+1KRqUzWoXqH+on5S3168p/8Djuec9w==
            "]], Polygon3DBox[CompressedData["
1:eJwt13fcjuUeAPD3fZ73tRKhFCkjezYQygwZIUrZQoRk7z1CdqWUrKaS9TnZ
I506adc5DVmleYRI6qQhOt9ftz9+n+v6fa/ffT/v8973NZ6SPQe1G5jKyMh4
T2SLq7IyMi4DLTMzMlqIZfIsMZOtlj+qZlQ6I+MacbVoaKyVsZe0DUQL/Qnq
+qiraLwSq8C6sCYsN0ux6WwVW8hGsGqiqmhkrLWxDdpf5P3156sbra6TPM1n
sBfZI2wk2yJ+l5cUOdlB43+wEdrFbBrrLb/TtVPZJracDWGnRB82mw1nd8jv
UDeZPcueE6WzE5vCNso3iAPy+qI5Gy/v7doKrv1Z9GVz2UjWQf6nGMWWsOns
HvkVrj0jLyvKiAfk5/gYdcvkM9X1k58Vo9lSNoP1lZ8RI9kT7H7WR17P9c3Y
OHY3K89qxTNhw1hXVpJ9JzqyIr5TU/2bxTeiPbuE1dOvL5qIxqJlVlL/svYv
+QT9p9xvrvsNPH993OcW452M7dKWFkX0b1FXQ93v+jfFsxUtjHWQ79Tul9+o
f1e8a+qukO8TN7DurDkrJm+ltgtbwMawVuw3MYgtZBPZXfEOiMHsETaJ9ZCf
Fvexh9h41i3u735N2Gg2SqyX1xT12BB5Z3Ul1P1P9GPzoo51lF8fz50NZV1Y
cfaTuIfNYSPYnfK66m5mY1kvVo5dJ64VNxlrE++StrZoqD9cXTd1peJ/wpqy
MawnK8vqsEZsBOse85T9KmLyPswmsO7ysupKsNtYXZZi5VhJdjurxzLjebPx
bD1bzAaw29hYtpY9xu5lFVl51pk1ZrlYT/Y4e5dtZg/EWsCuZb1ZG1aIbY7n
JC8ucrADxm9VN0C7gs1indW0Yfey5TEPWBfWmy1hH7BtbC4rz0qx9qw+S7O7
2RPsfbaVzWG92GL2HtvCZsc7wFayA+wN9jirwqqxnuwWViDWIHY168VasYvi
mbHrWX92G7uUPSc+0X+JvyYmq7km3iP9fur6itVx/3B2t7y1+oKua8uGppK1
JdaYD+XtxDC2Ur5AXU91d7GF7I14R9nUeIdYLXYvu51dxqrHe8QGsPasCOvB
HmPvsE1sFjucTubeZdnJ3I453lpdL7Yo1vb438i/513ZFPkA17aWd+Fz2Sts
FRvPvo21khV2vwaxF4iS6gqwxuqqqvtZ/8d4ntpZbBhrLy+lriBrwqqxn/Q7
sGnazWwFG6rudjaOrWOPs/7sQMwv1oO1ZFfGWqDuBfYZe4s9wTqzObEmsRfY
OLY+HRPAPiE+iDnhb++kbnascex5w2PU/Df2C3ZpdrJuxfr1QzwTdr+6Qera
yk+I7mwaG8hulR8X3dhUdh9rIz8Zz4RNZ4NZO/nT4lzsu+z9mLM+q4K/pZx+
J9Yx9h/5kXSythY13ky/uTga349NUtPPPVrIs9U+wNawRWx0rPVsVqy3bCUb
e/45xfNqnpV8xx3ayqKifld1TdXlMV479pBY3+P9NLZFO0Ss1v9C3SFxRF5c
5Eol+1jsZ8flF4t34t7xHdxvZqzNbBX7nL3NlrChbA37kr3LlrE8bCl7la1h
88/vl3/Ir4r9WByTf8hLq2smv05dDnku/ijbxp5h09PJmeZSdgO7UfwoHyie
Zwflb6pbrG4YW8u+ykzOQ8vZDvGXvIrIy740/ha7SFudXclO6W9lf8rLidzs
83ifWKb2GpaPfR3rt89Yr/0m3j/2pJqd8U6yauxC3a/0M9VN0j7D5rPBUcMm
sqfZPOkg9lnsvWww68SqyD8SZVhzVp3llI907QZ2JDNZt2L9GsU2sqNsD1vJ
crB57B9sKZvIdqWT7xnf91Vj+dRMEDtibrODxtaomch2slPsM7b2/F7bOJWs
h7Eu5vIOv8+LsQbyiurOxlrNLtfWZxXYn/rdXPuQ9nW2lk0+v171ZDPijCSK
ud+m2Av1r8hMzrD7jY9Xt117kh1gq9VsE2fj/iIPOxR7rLrN2u/ZXvaCmnFs
KzvB9rMX2QfxDrKGrBI7p//v+L9oG7HK7C/9/7Dicd6JdyYjNinvtSjM6rAy
6LdYl9kl2trxPrNf4zziczdpj7FP2fNqNorT8ssz/378GfuMb2C/yItk/n37
jL3sbZ2LtbVijrDTsf5kJWvc2zHn2Do1udki+fbYe9gMtj3Wofhe4gL2hfF/
xnqivZJdzL5LJXP/xfiOsWfFHuyf3ZUtSCVn4jgbV8pOzo9xjmyWlewP27OS
ugf1/6XmNfGVvLt4mO2Wr/MZU1yzN/az2AvYTaywvJ+6p9gnbBd7iA1gz7H9
bDdbxPqzp9ke9gp7OJ4PS7EacQ5h38a7yJ7UfsxeZg/GXi4qx/mE1WEXyvfE
GYG1ZTewfPIa8feJxu5xq7FNcTaQ14z9VL9t7F/anGK+/kuuXebaSelkTUzJ
z8jfNPZtnHvEs/r7+Ov8sXgvWFp+Vv6Wse/kn8bZRL9drGE8f8xxXpS1YjXZ
H/p92PJU8nziOR2W11V7o7g5Kznnb9N+kU7OoBdlJ98nvtc9fAX7yHU73W8B
+zKdfM8C2cl3jO86XN069nXsW+pWsI9FJdaG1WZ55W+K/OzamJvsx1SyV+RO
JetwrMcL5W+oy8eujvms7mQq2QfLppLfoPFb9LT81VifWAn5JeqOpJKz1JBU
cnaJM0xxf+dBdS3ZoNhD1VWWvyZyslKsMDuq/wrL0hZjhdjhmCfp5Pdsvuzk
92j8Lt0tLmRVYx6q+yHeJ59bR3sfu4MVVfO6yMsqs6LsRLzv7AJtxZiv7Hjs
L+nkPSmYneyvsc/G2bFGKtnzY+8/l5U8y2WpZL7EvKmu/ut0shcX0q8T66s4
lE5+M+fPTn5fxO+MEq7Nw+rGnuxzj+mPZVu0x9k+tkrd/wGlStyd
            "]], 
           Polygon3DBox[{{1153, 717, 720, 255, 207, 929}, {1045, 715, 457, 
            179, 252, 1050}}]},
          Annotation[#, "Charting`Private`Tag$48636#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkEsOgUEQhGd+v4U3vwiJDTcSR3AAjuAUTsABEFsWHntEYueRICwsEAs7
X6d7Uamanu6a6qm3Os124JyrgRh4gQe4gyGFNdwNneujN1Kj+Wt9T7DifIKX
8BQc0W+vdy/zqTCfoVYMtfazNwZ4buE09UWgveIzAnP0npkyOKA9XKUv7zVD
wWu2yKuf+J5ByfplLgrVU7wfofrKW1mv/jl4Zvk/6B55FugUPQnOE3TS67zs
fvN6lnrK/CX/mLlGXL3kry6yK9jJLvZv4jE0n6vtILtsAs3+tfx/WqI92g==

           "]], Polygon3DBox[CompressedData["
1:eJwtUDESgkAQ2zvOSrRACi19kQ5P8AH6BB/jB8ReC8FeGWcstQBHCv9gYq7I
sNnNJbvMV5ti7c0sBwJQgbydWYM6Q6MP4jfwXWK2GJgdocnRm2E2Ac6YjcGn
qO+YZaiv6LX4LqHv4vsS79Mgb3rSm35t1O8T5dfAK+oLzB9OGcwaApWpxxk1
1J68sthrUKdO2m2Qdxd3YcbTdAOz/zc47UDOG5lVeu13AP+Cf+L/4G6se+Di
tdPIKZPZPyDiMNA=
           "]], 
          Polygon3DBox[{{688, 485, 208, 273, 1051}, {1036, 689, 471, 195, 
           932}, {498, 222, 277, 276, 701}, {688, 721, 271, 194, 931}, {1151, 
           702, 499, 223, 944}, {1035, 268, 267, 180, 917}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skupFEYBuBTCm3WNsRMWtIRMVRsuQHDxrJY2VV3whY3oN0AV9DuwB2I
xIqkKN2GFWIeugmCbp6DxVvPd87/53znq6rW8cmRiUQIYU7uJNZ/ZV9yeSF8
5gGbecMu5iVD6GcVh9jCUfYwJd/Uw5zmGH/wOxc4w8XYj0tc4HI8Kz+EIz5I
Vm7lXI5caIPH3OQJczzlFs/4K77L37zgpWyrr7jDa+7yD/e4ao5q9afE+8BF
0qD/i+W6ZwXW/9U19grVWXv/rJPqOnvP6jV7+dZP8fvgI2fN8pNTnGeGs0xz
ioMckIy6k2k2cZCV7AuxiWfxrs5vivv6HfI+1vE3iDNLr54VTLGc3SyL57KU
HSxhO4v5Nc7JNn6Js6tbWchmFrCR2oX6xNs1Qi1dI6z4OP34f7wCk3ZCMw==

        "]], 
       Line3DBox[{917, 180, 265, 266, 267, 268, 722, 269, 1048, 270, 271, 721,
         272, 1051, 273, 274, 724, 275, 1049, 276, 277, 279, 257, 222, 498, 
        223, 499, 224, 709, 233, 249, 225, 245, 237, 946, 210, 932, 195, 
        917}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{726, 1037, 500, 725, 1155, 947, 727, 1156, 948, 728, 1157, 
        949, 729, 1158, 950, 730, 1159, 951, 731, 1160, 1053, 1258, 732, 1161,
         952, 733, 1162, 953, 734, 1163, 954, 735, 1164, 955, 736, 1165, 956, 
        737, 1166, 957, 738, 1361, 1038, 958, 1039}], 
       Line3DBox[{740, 1054, 1259, 739, 515, 741, 1167, 959, 742, 1168, 960, 
        743, 1169, 961, 744, 1170, 962, 745, 1171, 1055, 1260, 746, 1056, 
        1261, 747, 1172, 963, 748, 1173, 964, 749, 1174, 965, 750, 1175, 966, 
        751, 1176, 967, 752, 1177, 968, 753}], 
       Line3DBox[{755, 1057, 1262, 754, 1058, 1263, 756, 531, 757, 1178, 969, 
        758, 1179, 970, 759, 1180, 971, 760, 1181, 1059, 1264, 761, 1060, 
        1265, 762, 1061, 1266, 763, 1182, 972, 764, 1183, 973, 765, 1184, 974,
         766, 1185, 975, 767, 1186, 976, 768}], 
       Line3DBox[{770, 1062, 1267, 769, 1063, 1268, 771, 1064, 1269, 772, 547,
         773, 1187, 977, 774, 1188, 978, 775, 1189, 1065, 1270, 776, 1066, 
        1271, 777, 1067, 1272, 778, 1068, 1273, 779, 1190, 979, 780, 1191, 
        980, 781, 1192, 981, 782, 1193, 982, 783}], 
       Line3DBox[{785, 1069, 1274, 784, 1070, 1275, 786, 1071, 1276, 787, 
        1072, 1277, 788, 563, 789, 1194, 983, 790, 1195, 1073, 1278, 791, 
        1074, 1279, 792, 1075, 1280, 793, 1076, 1281, 794, 1077, 1282, 795, 
        1196, 984, 796, 1197, 985, 797, 1198, 986, 798}], 
       Line3DBox[{800, 1078, 1283, 799, 1079, 1284, 801, 1080, 1285, 802, 
        1081, 1286, 803, 1082, 1287, 804, 579, 805, 1199, 1083, 1288, 806, 
        1084, 1289, 807, 1085, 1290, 808, 1086, 1291, 809, 1087, 1292, 810, 
        1088, 1293, 811, 1200, 987, 812, 1201, 988, 813}], 
       Line3DBox[{817, 1202, 989, 815, 1203, 990, 819, 1204, 991, 821, 1205, 
        992, 823, 1206, 993, 825, 1207, 994, 827, 1208, 596, 829, 1209, 995, 
        831, 1210, 996, 833, 1211, 997, 835, 1212, 998, 837, 1213, 999, 839, 
        1214, 1000, 841, 1216, 1002, 843}], 
       Line3DBox[{842, 1001, 1215, 840, 1306, 1100, 838, 1305, 1099, 836, 
        1304, 1098, 834, 1303, 1097, 832, 1302, 1096, 830, 1301, 1095, 828, 
        1300, 595, 826, 1299, 1094, 824, 1298, 1093, 822, 1297, 1092, 820, 
        1296, 1091, 818, 1295, 1090, 814, 1294, 1089, 816}], 
       Line3DBox[{845, 1101, 1307, 844, 1217, 1003, 846, 1218, 1004, 847, 
        1219, 1005, 848, 1220, 1006, 849, 1221, 1007, 850, 1222, 1102, 1308, 
        851, 612, 852, 1223, 1008, 853, 1224, 1009, 854, 1225, 1010, 855, 
        1226, 1011, 856, 1227, 1012, 857, 1228, 1013, 858}], 
       Line3DBox[{860, 1103, 1309, 859, 1104, 1310, 861, 1229, 1014, 862, 
        1230, 1015, 863, 1231, 1016, 864, 1232, 1017, 865, 1233, 1105, 1311, 
        866, 1106, 1312, 867, 628, 868, 1234, 1018, 869, 1235, 1019, 870, 
        1236, 1020, 871, 1237, 1021, 872, 1238, 1022, 873}], 
       Line3DBox[{875, 1107, 1313, 874, 1108, 1314, 876, 1109, 1315, 877, 
        1239, 1023, 878, 1240, 1024, 879, 1241, 1025, 880, 1242, 1110, 1316, 
        881, 1111, 1317, 882, 1112, 1318, 883, 644, 884, 1243, 1026, 885, 
        1244, 1027, 886, 1245, 1028, 887, 1246, 1029, 888}], 
       Line3DBox[{890, 1113, 1319, 889, 1114, 1320, 891, 1115, 1321, 892, 
        1116, 1322, 893, 1247, 1030, 894, 1248, 1031, 895, 1249, 1117, 1323, 
        896, 1118, 1324, 897, 1119, 1325, 898, 1120, 1326, 899, 660, 900, 
        1250, 1032, 901, 1251, 1033, 902, 1252, 1044, 903}], 
       Line3DBox[{905, 1121, 1327, 904, 1122, 1328, 906, 1123, 1329, 907, 
        1124, 1330, 908, 1125, 1331, 909, 1253, 1034, 910, 1254, 1126, 1332, 
        911, 1127, 1333, 912, 1128, 1334, 913, 1129, 1335, 914, 1130, 1336, 
        915, 675, 916, 1255, 1045, 1050}], 
       Line3DBox[{919, 1131, 1337, 918, 1132, 1338, 920, 1133, 1339, 921, 
        1134, 1340, 922, 1135, 1341, 923, 1136, 1342, 924, 1256, 1137, 1343, 
        925, 1138, 1344, 926, 1139, 1345, 927, 1140, 1346, 928, 1141, 1347, 
        929, 1153, 1363, 930, 1047}], 
       Line3DBox[{1041, 1040, 1348, 1152, 933, 1142, 1349, 934, 1143, 1350, 
        935, 1144, 1351, 936, 1145, 1352, 937, 1146, 1353, 938, 1147, 1354, 
        1355, 939, 1148, 1356, 940, 1149, 1357, 941, 1150, 1358, 942, 1154, 
        1364, 943, 1046, 1052}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{281, 501, 1155, 282, 515, 310, 1263, 530, 325, 1268, 545, 
        340, 1275, 560, 355, 1284, 575, 370, 1295, 590, 1203, 385, 605, 1217, 
        400, 1310, 620, 415, 1314, 635, 430, 1320, 650, 445, 1328, 664, 459, 
        1338, 677, 473, 1349, 691, 488}], 
       Line3DBox[{283, 502, 1156, 284, 516, 1167, 311, 531, 326, 1269, 546, 
        341, 1276, 561, 356, 1285, 576, 371, 1296, 591, 1204, 386, 606, 1218, 
        401, 621, 1229, 416, 1315, 636, 431, 1321, 651, 446, 1329, 665, 460, 
        1339, 678, 474, 1350, 692, 489}], 
       Line3DBox[{285, 503, 1157, 286, 517, 1168, 312, 532, 1178, 327, 547, 
        342, 1277, 562, 357, 1286, 577, 372, 1297, 592, 1205, 387, 607, 1219, 
        402, 622, 1230, 417, 637, 1239, 432, 1322, 652, 447, 1330, 666, 461, 
        1340, 679, 475, 1351, 693, 490}], 
       Line3DBox[{287, 504, 1158, 288, 518, 1169, 313, 533, 1179, 328, 548, 
        1187, 343, 563, 358, 1287, 578, 373, 1298, 593, 1206, 388, 608, 1220, 
        403, 623, 1231, 418, 638, 1240, 433, 653, 1247, 448, 1331, 667, 462, 
        1341, 680, 476, 1352, 694, 491}], 
       Line3DBox[{289, 505, 1159, 290, 519, 1170, 314, 534, 1180, 329, 549, 
        1188, 344, 564, 1194, 359, 579, 374, 1299, 594, 1207, 389, 609, 1221, 
        404, 624, 1232, 419, 639, 1241, 434, 654, 1248, 449, 668, 1253, 463, 
        1342, 681, 477, 1353, 695, 492}], 
       Line3DBox[{291, 506, 1160, 293, 520, 1171, 315, 535, 1181, 330, 550, 
        1189, 345, 565, 1195, 360, 580, 1199, 375, 595, 1208, 390, 610, 1222, 
        405, 625, 1233, 420, 640, 1242, 435, 655, 1249, 450, 669, 1254, 464, 
        682, 1256, 478, 1354, 696, 493}], 
       Line3DBox[{295, 508, 1161, 296, 1261, 522, 317, 1265, 537, 332, 1271, 
        552, 347, 1279, 567, 362, 1289, 582, 377, 1301, 597, 1209, 392, 612, 
        407, 1312, 627, 422, 1317, 642, 437, 1324, 657, 452, 1333, 671, 466, 
        1344, 684, 480, 1356, 698, 495}], 
       Line3DBox[{297, 509, 1162, 298, 523, 1172, 318, 1266, 538, 333, 1272, 
        553, 348, 1280, 568, 363, 1290, 583, 378, 1302, 598, 1210, 393, 613, 
        1223, 408, 628, 423, 1318, 643, 438, 1325, 658, 453, 1334, 672, 467, 
        1345, 685, 481, 1357, 699, 496}], 
       Line3DBox[{299, 510, 1163, 300, 524, 1173, 319, 539, 1182, 334, 1273, 
        554, 349, 1281, 569, 364, 1291, 584, 379, 1303, 599, 1211, 394, 614, 
        1224, 409, 629, 1234, 424, 644, 439, 1326, 659, 454, 1335, 673, 468, 
        1346, 686, 482, 1358, 700, 497}], 
       Line3DBox[{301, 511, 1164, 302, 525, 1174, 320, 540, 1183, 335, 555, 
        1190, 350, 1282, 570, 365, 1292, 585, 380, 1304, 600, 1212, 395, 615, 
        1225, 410, 630, 1235, 425, 645, 1243, 440, 660, 455, 1336, 674, 469, 
        1347, 687, 483, 1364, 718, 713}], 
       Line3DBox[{303, 512, 1165, 304, 526, 1175, 321, 541, 1184, 336, 556, 
        1191, 351, 571, 1196, 366, 1293, 586, 381, 1305, 601, 1213, 396, 616, 
        1226, 411, 631, 1236, 426, 646, 1244, 441, 661, 1250, 456, 675, 470, 
        1363, 717, 720}], 
       Line3DBox[{305, 513, 1166, 306, 527, 1176, 322, 542, 1185, 337, 557, 
        1192, 352, 572, 1197, 367, 587, 1200, 382, 1306, 602, 1214, 397, 617, 
        1227, 412, 632, 1237, 427, 647, 1245, 442, 662, 1251, 457, 715, 1255, 
        712, 723}], 
       Line3DBox[{307, 704, 1361, 705, 308, 528, 1177, 323, 543, 1186, 338, 
        558, 1193, 353, 573, 1198, 368, 588, 1201, 383, 603, 1215, 1216, 398, 
        618, 1228, 413, 633, 1238, 428, 648, 1246, 443, 714, 1252, 711, 716, 
        719}], Line3DBox[{487, 690, 706, 1348, 472, 676, 1337, 458, 663, 1327,
         444, 649, 1319, 429, 634, 1313, 414, 619, 1309, 399, 604, 1307, 384, 
        1202, 589, 1294, 369, 574, 1283, 354, 559, 1274, 339, 544, 1267, 324, 
        529, 1262, 309, 514, 1259, 280, 500, 703, 710}], 
       Line3DBox[{494, 697, 1355, 479, 683, 1343, 465, 670, 1332, 451, 656, 
        1323, 436, 641, 1316, 421, 626, 1311, 406, 611, 1308, 391, 596, 1300, 
        376, 581, 1288, 361, 566, 1278, 346, 551, 1270, 331, 536, 1264, 316, 
        521, 1260, 294, 507, 1258, 292}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
W8usbO+Okk0DV0ZsmupASvw295YSCqiIuQpwvBkhRmdfH6X71AG1RpJHXqoX
Ks2Y12QEDhOnQwJ7XBXqYDbSzYLHqQ8WJBtaXn0/RNjm6x6Yr4P+p/75vCG/
4HwFcHxjUthSFwbnpnwMTUQY+3ed7Rq2L5WwdHt6lkt6IijKBI7xLaCT+q2m
rnrXqiFx88Sb8JtZMK6QNc5WSSPnaj92njavAfsTvUtD7PLhR7mZMO0ljXjK
em8zYamFH/FWV8ITSoDG6NGc9tGInK3q5Sy3WqjOybKf2lcFcWyOF77VU0nt
X3Mz1vm5Geug6kVFoybA69KEgjeva8bIuuBQJpXOJtBYvLUouqoVjpSmmLhO
j5KlQ+v4PISb4b5raca6vZ3gST/M8WnhKFlot1Ezk1EffBNe0q18iAKbjZ4l
FP0YJpbr/RRitzP6ArqheHFbD+yp0jwtPzBE7go6baOMNcFHfW6ns7p98G36
trVg/iBJ51N+vtCxCUT7KvNmoR8UM6WObfEdIK+DpKcPqVdBx6rt4RVCPlCj
VuefyUknJfP1kOR8fYR1UYBNZVuRci2opWV4uookwZOJoZMD8TQSl/NhyvBE
HYxSx0yWqWVDfU931QMLGpEZj31rpFYPqTWdDen7CsCM7QlfJjeNmHO1eeVL
N8D2bf5Hi/JKQXw29NVMBJVsUX2csp65ERzWbQ7YkVQNzu61gUmiVCI7PzfT
np+bBc3Pzd42UKs33G2Dzd+2lkU+bIYV+ksyV4WPksiTKQbL+NsBr8y6Uj5f
A0fI90atZ1HP2mFoi5niydgumHYf/+b0YJgcUOyNy/jYDkUTbTMjq3rg3V6j
hMPKQyTKds0Jfpd26D6iwhuf2AsypW773RYMktPL4zWvKrZD1paQq+/39wNH
ru4i66R+Qs3ZTzlR3gac3+IuxLwfALdtMRsSL/YRycEffkeHamBOQDtzdJ8P
1N68ciijjUZSRPM2vz1YB77ulo03b4aDgjn3yL5gGlk/Xw95z9dHWBe5qXCp
Dv9oAB3RsxHWXAACnNZuM3NUYrqjT+nXsSaY9UyQ06YUgKPNkuWNjlTiXVX7
RMGuGR44OnuwZJeB0L69gruZqGTo/X7RX4Et4PVdTOW5Yw2UVOoe3qc3TmTn
52bH5udm7PNzs5lTirtt/bqA3Tlomal5C0x+EGTKOzlCNE+uDmky6Ibzgbm1
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
/ZFDRc799dlpJ538Bws8YV8=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{344.12428610526496`, 242.09970164199135`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0.2238907791412375, 0.9154500597546478}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.0128003341538885`, -2.8855379571997886`, 1.4484150581573594`},
  ViewVertical->{-0.14176195582875747`, 0.40388958280952303`, 
   0.9037570208731742}]], "Output",
 CellChangeTimes->{{3.918446575872005*^9, 3.9184465900869455`*^9}, {
   3.9184466298684044`*^9, 3.9184466689028397`*^9}, 3.918446699470098*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"89a155a4-6041-44ae-8f13-bcc8a9a9570c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Table", " ", "is", " ", "used", " ", "to", " ", "create", " ", "a", " ", 
    "list", " ", "of", " ", "values"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9184467097233543`*^9, 
  3.918446736471328*^9}},ExpressionUUID->"b519ce2b-5699-4ab4-945d-\
9dbb47820022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.9184467185668125`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"e295bfd3-f687-4825-aa21-4e7926802dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "%", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "\"\<%\>\"", " ", "means", " ", "the", " ", "last", " ", "output"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.9184467560652065`*^9, 
  3.9184467800215254`*^9}},ExpressionUUID->"d752c844-b79d-4e7e-a18f-\
58db9c43f468"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.9184467588494177`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"279bf4f4-cecb-49d1-88f1-c663efa43257"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"function", " ", "just", " ", "like", " ", "scatter"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.918448117180128*^9, 
  3.918448150103066*^9}},ExpressionUUID->"0651d04e-d87b-4d6a-aca0-\
1a23b68fa0a3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.}, {0, 25.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9184481358610353`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"e11db523-51c7-465e-9a23-f031ae6ac785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9184481857891846`*^9, 3.9184481935449395`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"61e43039-30a6-4801-b21f-760d1f1f4583"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.918448194039776*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"359ebe76-97e8-4c16-95bd-c59f2ef461b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6", ",", "8"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "mat1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "mat1", "]"}]}], "Input",
 CellChangeTimes->{{3.9184483350465016`*^9, 3.9184483806160746`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"8dcca00d-dbb6-4ce7-9a20-4e11c7dd01d8"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.918448369717493*^9, 3.9184483822568846`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"7304e7cf-bbd6-46e1-a99a-0dc8da05dfd2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 732},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (2023\:5e741\:670830\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e7e6799d-af81-42e1-9f1a-b93259001546"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 326, 5, 67, "Section",ExpressionUUID->"845c7123-19c7-4a03-932c-7aa053d2af8e"],
Cell[909, 29, 681, 17, 67, "Input",ExpressionUUID->"13d5bc39-3c1e-48c0-8f53-fab5d1e552f4"],
Cell[CellGroupData[{
Cell[1615, 50, 232, 5, 28, "Input",ExpressionUUID->"a7538de2-8082-4cea-a734-97125bfd97d6"],
Cell[1850, 57, 150, 2, 32, "Output",ExpressionUUID->"5e266efd-1fde-4996-8503-b33c78f02d40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2037, 64, 197, 3, 28, "Input",ExpressionUUID->"482edf62-93c8-4658-8c21-9780841ef7d4"],
Cell[2237, 69, 172, 3, 48, "Output",ExpressionUUID->"3b97d3ff-8440-44ee-ba36-98d6519c37df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2446, 77, 493, 14, 78, "Input",ExpressionUUID->"afe748a7-fdea-4e0e-a7ab-5106bf855648"],
Cell[2942, 93, 166, 2, 32, "Output",ExpressionUUID->"74258378-bd78-41d1-8b13-7da297adec70"],
Cell[3111, 97, 175, 2, 32, "Output",ExpressionUUID->"aeb7d8a2-26d2-483f-8302-e7fee1767520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3323, 104, 36492, 732, 69, "WolframAlphaShortInput",ExpressionUUID->"dd7542ed-df34-4c57-a316-dea2375c2181"],
Cell[39818, 838, 173, 3, 48, "Output",ExpressionUUID->"ec56a593-7507-4601-af7c-ebf713366150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40028, 846, 1085, 33, 152, "Input",ExpressionUUID->"e212a180-b2c5-432d-a93f-9b07a35b4e7d"],
Cell[41116, 881, 203, 3, 32, "Output",ExpressionUUID->"2c298994-8927-40cd-bec5-e2c6d95f4605"],
Cell[41322, 886, 283, 6, 32, "Output",ExpressionUUID->"8746aa17-817b-4cf5-8a4a-99d26b3550c4"],
Cell[41608, 894, 300, 7, 48, "Output",ExpressionUUID->"3440f135-59a5-48f1-bb3e-2f429febcaba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41945, 906, 30019, 601, 726, "WolframAlphaShortInput",ExpressionUUID->"496faaf7-9aa5-4e66-8deb-d7c302e30cd6"],
Cell[71967, 1509, 247, 6, 48, "Output",ExpressionUUID->"444af797-b9cf-4a8d-8008-b52ea538ae8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72251, 1520, 505, 15, 43, "Input",ExpressionUUID->"d23b4dc3-71aa-44f1-8c7f-d8aecf9e139e"],
Cell[72759, 1537, 331, 9, 48, "Output",ExpressionUUID->"5bd66edb-162b-4225-8986-bf025c8bf573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73127, 1551, 370, 10, 43, "Input",ExpressionUUID->"9da54d9e-bcaa-44ef-b4b0-c2a7ffeb62a4"],
Cell[73500, 1563, 742, 24, 53, "Output",ExpressionUUID->"24711272-6d56-4731-9520-86e87ea58b4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74279, 1592, 353, 9, 43, "Input",ExpressionUUID->"858f6e1d-b0eb-4bf0-a7e5-85ab1ba22023"],
Cell[74635, 1603, 3361, 74, 239, "Output",ExpressionUUID->"451405d2-d17f-4713-bc23-695dbe0072ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78033, 1682, 14499, 354, 67, "WolframAlphaShortInput",ExpressionUUID->"494e1aa3-ff01-467d-bb0f-8d40683c3369"],
Cell[92535, 2038, 18479, 322, 239, "Output",ExpressionUUID->"e04387fd-efcb-492e-afbc-bf99960a61a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111051, 2365, 16265, 395, 67, "WolframAlphaShortInput",ExpressionUUID->"45dd6a16-7b2b-4339-9d50-e651b965aa2c"],
Cell[127319, 2762, 73634, 1212, 259, "Output",ExpressionUUID->"89a155a4-6041-44ae-8f13-bcc8a9a9570c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200990, 3979, 465, 13, 43, "Input",ExpressionUUID->"b519ce2b-5699-4ab4-945d-9dbb47820022"],
Cell[201458, 3994, 228, 4, 32, "Output",ExpressionUUID->"e295bfd3-f687-4825-aa21-4e7926802dc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201723, 4003, 315, 9, 43, "Input",ExpressionUUID->"d752c844-b79d-4e7e-a18f-58db9c43f468"],
Cell[202041, 4014, 152, 2, 32, "Output",ExpressionUUID->"279bf4f4-cecb-49d1-88f1-c663efa43257"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202230, 4021, 444, 13, 43, "Input",ExpressionUUID->"0651d04e-d87b-4d6a-aca0-1a23b68fa0a3"],
Cell[202677, 4036, 3386, 91, 245, "Output",ExpressionUUID->"e11db523-51c7-465e-9a23-f031ae6ac785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206100, 4132, 265, 5, 43, "Input",ExpressionUUID->"61e43039-30a6-4801-b21f-760d1f1f4583"],
Cell[206368, 4139, 196, 4, 32, "Output",ExpressionUUID->"359ebe76-97e8-4c16-95bd-c59f2ef461b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206601, 4148, 594, 15, 97, "Input",ExpressionUUID->"8dcca00d-dbb6-4ce7-9a20-4e11c7dd01d8"],
Cell[207198, 4165, 175, 2, 32, "Output",ExpressionUUID->"7304e7cf-bbd6-46e1-a99a-0dc8da05dfd2"]
}, Open  ]]
}, Open  ]]
}
]
*)

